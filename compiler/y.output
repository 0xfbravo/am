Terminals unused in grammar

   R_IF
   R_ELSE
   R_WHILE
   R_DO
   R_FOR
   R_SWITCH
   R_CASE
   R_BREAK
   R_CONTINUE
   R_IN


Grammar

    0 $accept: BEFORE_THE_BEGINNING $end

    1 BEFORE_THE_BEGINNING: CMDS

    2 BLOCK: BLOCK_INIT CMDS BLOCK_END

    3 CMDS: CMD CMDS
    4     | %empty

    5 CMD: BLOCK
    6    | END_LINE
    7    | OUT
    8    | EXP
    9    | EXP SEMI_COLON

   10 OUT: R_OUT COLON EXP COMMA_OUT

   11 COMMA_OUT: COMMA EXP COMMA_OUT
   12          | %empty

   13 EXP: EXP COLON COLON EXPLICIT_TYPE
   14    | EXP BOOLEAN_LOGIC EXP
   15    | NOT EXP
   16    | EXP QUESTION EXP COLON EXP
   17    | EXP EQUALITY_TEST EXP
   18    | EXP ORDER_RELATION EXP
   19    | varConst ASSIGNMENT EXP
   20    | EXP ARITHMETIC_1 EXP
   21    | EXP ARITHMETIC_2 EXP
   22    | '(' EXP ')'
   23    | VAR
   24    | CONST
   25    | INTEGER
   26    | FLOAT
   27    | BOOLEAN
   28    | CHARACTER
   29    | STRING

   30 varConst: VAR
   31         | CONST


Terminals, with rules where they appear

$end (0) 0
'(' (40) 22
')' (41) 22
error (256)
BLOCK_INIT (258) 2
BLOCK_END (259) 2
SEMI_COLON (260) 9
R_IF (261)
R_ELSE (262)
R_WHILE (263)
R_DO (264)
R_FOR (265)
R_SWITCH (266)
R_CASE (267)
R_BREAK (268)
R_CONTINUE (269)
R_IN (270)
R_OUT (271) 10
INTEGER (272) 25
FLOAT (273) 26
BOOLEAN (274) 27
CHARACTER (275) 28
STRING (276) 29
ARITHMETIC_1 (277) 20
ARITHMETIC_2 (278) 21
BOOLEAN_LOGIC (279) 14
EQUALITY_TEST (280) 17
ORDER_RELATION (281) 18
ASSIGNMENT (282) 19
NOT (283) 15
COLON (284) 10 13 16
QUESTION (285) 16
COMMA (286) 11
VAR (287) 23 30
CONST (288) 24 31
EXPLICIT_TYPE (289) 13
END_LINE (290) 6


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
BEFORE_THE_BEGINNING (39)
    on left: 1, on right: 0
BLOCK (40)
    on left: 2, on right: 5
CMDS (41)
    on left: 3 4, on right: 1 2 3
CMD (42)
    on left: 5 6 7 8 9, on right: 3
OUT (43)
    on left: 10, on right: 7
COMMA_OUT (44)
    on left: 11 12, on right: 10 11
EXP (45)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29, on right:
    8 9 10 11 13 14 15 16 17 18 19 20 21 22
varConst (46)
    on left: 30 31, on right: 19


State 0

    0 $accept: . BEFORE_THE_BEGINNING $end

    BLOCK_INIT  shift, and go to state 1
    R_OUT       shift, and go to state 2
    INTEGER     shift, and go to state 3
    FLOAT       shift, and go to state 4
    BOOLEAN     shift, and go to state 5
    CHARACTER   shift, and go to state 6
    STRING      shift, and go to state 7
    NOT         shift, and go to state 8
    VAR         shift, and go to state 9
    CONST       shift, and go to state 10
    END_LINE    shift, and go to state 11
    '('         shift, and go to state 12

    $default  reduce using rule 4 (CMDS)

    BEFORE_THE_BEGINNING  go to state 13
    BLOCK                 go to state 14
    CMDS                  go to state 15
    CMD                   go to state 16
    OUT                   go to state 17
    EXP                   go to state 18
    varConst              go to state 19


State 1

    2 BLOCK: BLOCK_INIT . CMDS BLOCK_END

    BLOCK_INIT  shift, and go to state 1
    R_OUT       shift, and go to state 2
    INTEGER     shift, and go to state 3
    FLOAT       shift, and go to state 4
    BOOLEAN     shift, and go to state 5
    CHARACTER   shift, and go to state 6
    STRING      shift, and go to state 7
    NOT         shift, and go to state 8
    VAR         shift, and go to state 9
    CONST       shift, and go to state 10
    END_LINE    shift, and go to state 11
    '('         shift, and go to state 12

    $default  reduce using rule 4 (CMDS)

    BLOCK     go to state 14
    CMDS      go to state 20
    CMD       go to state 16
    OUT       go to state 17
    EXP       go to state 18
    varConst  go to state 19


State 2

   10 OUT: R_OUT . COLON EXP COMMA_OUT

    COLON  shift, and go to state 21


State 3

   25 EXP: INTEGER .

    $default  reduce using rule 25 (EXP)


State 4

   26 EXP: FLOAT .

    $default  reduce using rule 26 (EXP)


State 5

   27 EXP: BOOLEAN .

    $default  reduce using rule 27 (EXP)


State 6

   28 EXP: CHARACTER .

    $default  reduce using rule 28 (EXP)


State 7

   29 EXP: STRING .

    $default  reduce using rule 29 (EXP)


State 8

   15 EXP: NOT . EXP

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOLEAN    shift, and go to state 5
    CHARACTER  shift, and go to state 6
    STRING     shift, and go to state 7
    NOT        shift, and go to state 8
    VAR        shift, and go to state 9
    CONST      shift, and go to state 10
    '('        shift, and go to state 12

    EXP       go to state 22
    varConst  go to state 19


State 9

   23 EXP: VAR .
   30 varConst: VAR .

    ASSIGNMENT  reduce using rule 30 (varConst)
    $default    reduce using rule 23 (EXP)


State 10

   24 EXP: CONST .
   31 varConst: CONST .

    ASSIGNMENT  reduce using rule 31 (varConst)
    $default    reduce using rule 24 (EXP)


State 11

    6 CMD: END_LINE .

    $default  reduce using rule 6 (CMD)


State 12

   22 EXP: '(' . EXP ')'

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOLEAN    shift, and go to state 5
    CHARACTER  shift, and go to state 6
    STRING     shift, and go to state 7
    NOT        shift, and go to state 8
    VAR        shift, and go to state 9
    CONST      shift, and go to state 10
    '('        shift, and go to state 12

    EXP       go to state 23
    varConst  go to state 19


State 13

    0 $accept: BEFORE_THE_BEGINNING . $end

    $end  shift, and go to state 24


State 14

    5 CMD: BLOCK .

    $default  reduce using rule 5 (CMD)


State 15

    1 BEFORE_THE_BEGINNING: CMDS .

    $default  reduce using rule 1 (BEFORE_THE_BEGINNING)


State 16

    3 CMDS: CMD . CMDS

    BLOCK_INIT  shift, and go to state 1
    R_OUT       shift, and go to state 2
    INTEGER     shift, and go to state 3
    FLOAT       shift, and go to state 4
    BOOLEAN     shift, and go to state 5
    CHARACTER   shift, and go to state 6
    STRING      shift, and go to state 7
    NOT         shift, and go to state 8
    VAR         shift, and go to state 9
    CONST       shift, and go to state 10
    END_LINE    shift, and go to state 11
    '('         shift, and go to state 12

    $default  reduce using rule 4 (CMDS)

    BLOCK     go to state 14
    CMDS      go to state 25
    CMD       go to state 16
    OUT       go to state 17
    EXP       go to state 18
    varConst  go to state 19


State 17

    7 CMD: OUT .

    $default  reduce using rule 7 (CMD)


State 18

    8 CMD: EXP .
    9    | EXP . SEMI_COLON
   13 EXP: EXP . COLON COLON EXPLICIT_TYPE
   14    | EXP . BOOLEAN_LOGIC EXP
   16    | EXP . QUESTION EXP COLON EXP
   17    | EXP . EQUALITY_TEST EXP
   18    | EXP . ORDER_RELATION EXP
   20    | EXP . ARITHMETIC_1 EXP
   21    | EXP . ARITHMETIC_2 EXP

    SEMI_COLON      shift, and go to state 26
    ARITHMETIC_1    shift, and go to state 27
    ARITHMETIC_2    shift, and go to state 28
    BOOLEAN_LOGIC   shift, and go to state 29
    EQUALITY_TEST   shift, and go to state 30
    ORDER_RELATION  shift, and go to state 31
    COLON           shift, and go to state 32
    QUESTION        shift, and go to state 33

    $default  reduce using rule 8 (CMD)


State 19

   19 EXP: varConst . ASSIGNMENT EXP

    ASSIGNMENT  shift, and go to state 34


State 20

    2 BLOCK: BLOCK_INIT CMDS . BLOCK_END

    BLOCK_END  shift, and go to state 35


State 21

   10 OUT: R_OUT COLON . EXP COMMA_OUT

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOLEAN    shift, and go to state 5
    CHARACTER  shift, and go to state 6
    STRING     shift, and go to state 7
    NOT        shift, and go to state 8
    VAR        shift, and go to state 9
    CONST      shift, and go to state 10
    '('        shift, and go to state 12

    EXP       go to state 36
    varConst  go to state 19


State 22

   13 EXP: EXP . COLON COLON EXPLICIT_TYPE
   14    | EXP . BOOLEAN_LOGIC EXP
   15    | NOT EXP .
   16    | EXP . QUESTION EXP COLON EXP
   17    | EXP . EQUALITY_TEST EXP
   18    | EXP . ORDER_RELATION EXP
   20    | EXP . ARITHMETIC_1 EXP
   21    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 27
    ARITHMETIC_2  shift, and go to state 28

    $default  reduce using rule 15 (EXP)


State 23

   13 EXP: EXP . COLON COLON EXPLICIT_TYPE
   14    | EXP . BOOLEAN_LOGIC EXP
   16    | EXP . QUESTION EXP COLON EXP
   17    | EXP . EQUALITY_TEST EXP
   18    | EXP . ORDER_RELATION EXP
   20    | EXP . ARITHMETIC_1 EXP
   21    | EXP . ARITHMETIC_2 EXP
   22    | '(' EXP . ')'

    ARITHMETIC_1    shift, and go to state 27
    ARITHMETIC_2    shift, and go to state 28
    BOOLEAN_LOGIC   shift, and go to state 29
    EQUALITY_TEST   shift, and go to state 30
    ORDER_RELATION  shift, and go to state 31
    COLON           shift, and go to state 32
    QUESTION        shift, and go to state 33
    ')'             shift, and go to state 37


State 24

    0 $accept: BEFORE_THE_BEGINNING $end .

    $default  accept


State 25

    3 CMDS: CMD CMDS .

    $default  reduce using rule 3 (CMDS)


State 26

    9 CMD: EXP SEMI_COLON .

    $default  reduce using rule 9 (CMD)


State 27

   20 EXP: EXP ARITHMETIC_1 . EXP

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOLEAN    shift, and go to state 5
    CHARACTER  shift, and go to state 6
    STRING     shift, and go to state 7
    NOT        shift, and go to state 8
    VAR        shift, and go to state 9
    CONST      shift, and go to state 10
    '('        shift, and go to state 12

    EXP       go to state 38
    varConst  go to state 19


State 28

   21 EXP: EXP ARITHMETIC_2 . EXP

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOLEAN    shift, and go to state 5
    CHARACTER  shift, and go to state 6
    STRING     shift, and go to state 7
    NOT        shift, and go to state 8
    VAR        shift, and go to state 9
    CONST      shift, and go to state 10
    '('        shift, and go to state 12

    EXP       go to state 39
    varConst  go to state 19


State 29

   14 EXP: EXP BOOLEAN_LOGIC . EXP

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOLEAN    shift, and go to state 5
    CHARACTER  shift, and go to state 6
    STRING     shift, and go to state 7
    NOT        shift, and go to state 8
    VAR        shift, and go to state 9
    CONST      shift, and go to state 10
    '('        shift, and go to state 12

    EXP       go to state 40
    varConst  go to state 19


State 30

   17 EXP: EXP EQUALITY_TEST . EXP

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOLEAN    shift, and go to state 5
    CHARACTER  shift, and go to state 6
    STRING     shift, and go to state 7
    NOT        shift, and go to state 8
    VAR        shift, and go to state 9
    CONST      shift, and go to state 10
    '('        shift, and go to state 12

    EXP       go to state 41
    varConst  go to state 19


State 31

   18 EXP: EXP ORDER_RELATION . EXP

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOLEAN    shift, and go to state 5
    CHARACTER  shift, and go to state 6
    STRING     shift, and go to state 7
    NOT        shift, and go to state 8
    VAR        shift, and go to state 9
    CONST      shift, and go to state 10
    '('        shift, and go to state 12

    EXP       go to state 42
    varConst  go to state 19


State 32

   13 EXP: EXP COLON . COLON EXPLICIT_TYPE

    COLON  shift, and go to state 43


State 33

   16 EXP: EXP QUESTION . EXP COLON EXP

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOLEAN    shift, and go to state 5
    CHARACTER  shift, and go to state 6
    STRING     shift, and go to state 7
    NOT        shift, and go to state 8
    VAR        shift, and go to state 9
    CONST      shift, and go to state 10
    '('        shift, and go to state 12

    EXP       go to state 44
    varConst  go to state 19


State 34

   19 EXP: varConst ASSIGNMENT . EXP

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOLEAN    shift, and go to state 5
    CHARACTER  shift, and go to state 6
    STRING     shift, and go to state 7
    NOT        shift, and go to state 8
    VAR        shift, and go to state 9
    CONST      shift, and go to state 10
    '('        shift, and go to state 12

    EXP       go to state 45
    varConst  go to state 19


State 35

    2 BLOCK: BLOCK_INIT CMDS BLOCK_END .

    $default  reduce using rule 2 (BLOCK)


State 36

   10 OUT: R_OUT COLON EXP . COMMA_OUT
   13 EXP: EXP . COLON COLON EXPLICIT_TYPE
   14    | EXP . BOOLEAN_LOGIC EXP
   16    | EXP . QUESTION EXP COLON EXP
   17    | EXP . EQUALITY_TEST EXP
   18    | EXP . ORDER_RELATION EXP
   20    | EXP . ARITHMETIC_1 EXP
   21    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 27
    ARITHMETIC_2    shift, and go to state 28
    BOOLEAN_LOGIC   shift, and go to state 29
    EQUALITY_TEST   shift, and go to state 30
    ORDER_RELATION  shift, and go to state 31
    COLON           shift, and go to state 32
    QUESTION        shift, and go to state 33
    COMMA           shift, and go to state 46

    $default  reduce using rule 12 (COMMA_OUT)

    COMMA_OUT  go to state 47


State 37

   22 EXP: '(' EXP ')' .

    $default  reduce using rule 22 (EXP)


State 38

   13 EXP: EXP . COLON COLON EXPLICIT_TYPE
   14    | EXP . BOOLEAN_LOGIC EXP
   16    | EXP . QUESTION EXP COLON EXP
   17    | EXP . EQUALITY_TEST EXP
   18    | EXP . ORDER_RELATION EXP
   20    | EXP . ARITHMETIC_1 EXP
   20    | EXP ARITHMETIC_1 EXP .
   21    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_2  shift, and go to state 28

    $default  reduce using rule 20 (EXP)


State 39

   13 EXP: EXP . COLON COLON EXPLICIT_TYPE
   14    | EXP . BOOLEAN_LOGIC EXP
   16    | EXP . QUESTION EXP COLON EXP
   17    | EXP . EQUALITY_TEST EXP
   18    | EXP . ORDER_RELATION EXP
   20    | EXP . ARITHMETIC_1 EXP
   21    | EXP . ARITHMETIC_2 EXP
   21    | EXP ARITHMETIC_2 EXP .

    $default  reduce using rule 21 (EXP)


State 40

   13 EXP: EXP . COLON COLON EXPLICIT_TYPE
   14    | EXP . BOOLEAN_LOGIC EXP
   14    | EXP BOOLEAN_LOGIC EXP .
   16    | EXP . QUESTION EXP COLON EXP
   17    | EXP . EQUALITY_TEST EXP
   18    | EXP . ORDER_RELATION EXP
   20    | EXP . ARITHMETIC_1 EXP
   21    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 27
    ARITHMETIC_2    shift, and go to state 28
    EQUALITY_TEST   shift, and go to state 30
    ORDER_RELATION  shift, and go to state 31
    COLON           shift, and go to state 32
    QUESTION        shift, and go to state 33

    $default  reduce using rule 14 (EXP)


State 41

   13 EXP: EXP . COLON COLON EXPLICIT_TYPE
   14    | EXP . BOOLEAN_LOGIC EXP
   16    | EXP . QUESTION EXP COLON EXP
   17    | EXP . EQUALITY_TEST EXP
   17    | EXP EQUALITY_TEST EXP .
   18    | EXP . ORDER_RELATION EXP
   20    | EXP . ARITHMETIC_1 EXP
   21    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 27
    ARITHMETIC_2  shift, and go to state 28
    COLON         shift, and go to state 32
    QUESTION      shift, and go to state 33

    $default  reduce using rule 17 (EXP)


State 42

   13 EXP: EXP . COLON COLON EXPLICIT_TYPE
   14    | EXP . BOOLEAN_LOGIC EXP
   16    | EXP . QUESTION EXP COLON EXP
   17    | EXP . EQUALITY_TEST EXP
   18    | EXP . ORDER_RELATION EXP
   18    | EXP ORDER_RELATION EXP .
   20    | EXP . ARITHMETIC_1 EXP
   21    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 27
    ARITHMETIC_2  shift, and go to state 28
    COLON         shift, and go to state 32
    QUESTION      shift, and go to state 33

    $default  reduce using rule 18 (EXP)


State 43

   13 EXP: EXP COLON COLON . EXPLICIT_TYPE

    EXPLICIT_TYPE  shift, and go to state 48


State 44

   13 EXP: EXP . COLON COLON EXPLICIT_TYPE
   14    | EXP . BOOLEAN_LOGIC EXP
   16    | EXP . QUESTION EXP COLON EXP
   16    | EXP QUESTION EXP . COLON EXP
   17    | EXP . EQUALITY_TEST EXP
   18    | EXP . ORDER_RELATION EXP
   20    | EXP . ARITHMETIC_1 EXP
   21    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 27
    ARITHMETIC_2    shift, and go to state 28
    BOOLEAN_LOGIC   shift, and go to state 29
    EQUALITY_TEST   shift, and go to state 30
    ORDER_RELATION  shift, and go to state 31
    COLON           shift, and go to state 49
    QUESTION        shift, and go to state 33


State 45

   13 EXP: EXP . COLON COLON EXPLICIT_TYPE
   14    | EXP . BOOLEAN_LOGIC EXP
   16    | EXP . QUESTION EXP COLON EXP
   17    | EXP . EQUALITY_TEST EXP
   18    | EXP . ORDER_RELATION EXP
   19    | varConst ASSIGNMENT EXP .
   20    | EXP . ARITHMETIC_1 EXP
   21    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 27
    ARITHMETIC_2    shift, and go to state 28
    BOOLEAN_LOGIC   shift, and go to state 29
    EQUALITY_TEST   shift, and go to state 30
    ORDER_RELATION  shift, and go to state 31
    COLON           shift, and go to state 32
    QUESTION        shift, and go to state 33

    $default  reduce using rule 19 (EXP)


State 46

   11 COMMA_OUT: COMMA . EXP COMMA_OUT

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOLEAN    shift, and go to state 5
    CHARACTER  shift, and go to state 6
    STRING     shift, and go to state 7
    NOT        shift, and go to state 8
    VAR        shift, and go to state 9
    CONST      shift, and go to state 10
    '('        shift, and go to state 12

    EXP       go to state 50
    varConst  go to state 19


State 47

   10 OUT: R_OUT COLON EXP COMMA_OUT .

    $default  reduce using rule 10 (OUT)


State 48

   13 EXP: EXP COLON COLON EXPLICIT_TYPE .

    $default  reduce using rule 13 (EXP)


State 49

   13 EXP: EXP COLON . COLON EXPLICIT_TYPE
   16    | EXP QUESTION EXP COLON . EXP

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOLEAN    shift, and go to state 5
    CHARACTER  shift, and go to state 6
    STRING     shift, and go to state 7
    NOT        shift, and go to state 8
    COLON      shift, and go to state 43
    VAR        shift, and go to state 9
    CONST      shift, and go to state 10
    '('        shift, and go to state 12

    EXP       go to state 51
    varConst  go to state 19


State 50

   11 COMMA_OUT: COMMA EXP . COMMA_OUT
   13 EXP: EXP . COLON COLON EXPLICIT_TYPE
   14    | EXP . BOOLEAN_LOGIC EXP
   16    | EXP . QUESTION EXP COLON EXP
   17    | EXP . EQUALITY_TEST EXP
   18    | EXP . ORDER_RELATION EXP
   20    | EXP . ARITHMETIC_1 EXP
   21    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 27
    ARITHMETIC_2    shift, and go to state 28
    BOOLEAN_LOGIC   shift, and go to state 29
    EQUALITY_TEST   shift, and go to state 30
    ORDER_RELATION  shift, and go to state 31
    COLON           shift, and go to state 32
    QUESTION        shift, and go to state 33
    COMMA           shift, and go to state 46

    $default  reduce using rule 12 (COMMA_OUT)

    COMMA_OUT  go to state 52


State 51

   13 EXP: EXP . COLON COLON EXPLICIT_TYPE
   14    | EXP . BOOLEAN_LOGIC EXP
   16    | EXP . QUESTION EXP COLON EXP
   16    | EXP QUESTION EXP COLON EXP .
   17    | EXP . EQUALITY_TEST EXP
   18    | EXP . ORDER_RELATION EXP
   20    | EXP . ARITHMETIC_1 EXP
   21    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 27
    ARITHMETIC_2  shift, and go to state 28

    $default  reduce using rule 16 (EXP)


State 52

   11 COMMA_OUT: COMMA EXP COMMA_OUT .

    $default  reduce using rule 11 (COMMA_OUT)
