Terminals unused in grammar

   RETURN
   MTX_INT
   MTX_FLOAT
   MTX_BOOLEAN
   MTX_CHAR
   MTX_STRING
   VOID


Grammar

    0 $accept: BEFORE_THE_BEGINNING $end

    1 BEFORE_THE_BEGINNING: CMDS

    2 BLOCK: START_SCOPE BLOCK_INIT CMDS BLOCK_END END_SCOPE

    3 START_SCOPE: %empty

    4 END_SCOPE: %empty

    5 CMDS: CMD CMDS
    6     | %empty

    7 WHILE: R_WHILE EXP BLOCK

    8 DO_WHILE: R_DO BLOCK R_WHILE EXP

    9 IF: R_IF EXP BLOCK ELSE

   10 ELSE: R_ELSE ELSEIF
   11     | %empty

   12 ELSEIF: IF
   13       | BLOCK

   14 FOR: R_FOR '(' ASSIGNMENT_STATE SEMI_COLON EXP SEMI_COLON UNITARY_STATE ')' BLOCK

   15 SWITCH: R_SWITCH EXP BLOCK_INIT END_LINE CASES BLOCK_END

   16 CASES: CASE DEFAULT
   17      | CASE CASES

   18 CASE: R_CASE EXP COLON CMDS

   19 DEFAULT: R_DEFAULT COLON CMDS

   20 BREAK: R_BREAK

   21 CONTINUE: R_CONTINUE

   22 ASSIGNMENT_STATE: varConst MATRIX_INIT PRIMITIVE COMMA PRIMITIVE MATRIX_END ASSIGNMENT EXP
   23                 | varConst ASSIGNMENT EXP

   24 FUNCTION_STATE: varConst '(' PARAMS ')' BLOCK

   25 PARAMS: PARAM COMMA_PARAMS
   26       | %empty

   27 COMMA_PARAMS: COMMA PARAM COMMA_PARAMS
   28             | %empty

   29 PARAM: IS

   30 CMD: FUNCTION_STATE
   31    | IF
   32    | WHILE
   33    | DO_WHILE
   34    | END_LINE
   35    | FOR
   36    | SWITCH
   37    | BREAK
   38    | CONTINUE
   39    | IS
   40    | IN
   41    | OUT
   42    | IS SEMI_COLON
   43    | IN SEMI_COLON
   44    | OUT SEMI_COLON
   45    | ASSIGNMENT_STATE
   46    | ASSIGNMENT_STATE SEMI_COLON
   47    | UNITARY_STATE
   48    | UNITARY_STATE SEMI_COLON
   49    | BLOCK

   50 UNITARY_STATE: varConst R_UP
   51              | varConst R_UM

   52 IS: varConst R_IS TYPE

   53 TYPE: INTEGER
   54     | FLOAT
   55     | BOOLEAN
   56     | CHARACTER
   57     | STRING

   58 IN: R_IN COLON varConst

   59 OUT: R_OUT COLON EXP COMMA_OUT

   60 COMMA_OUT: COMMA EXP COMMA_OUT
   61          | %empty

   62 MATRIX_INIT_STATE: MATRIX_INIT PRIMITIVE COLON PRIMITIVE MATRIX_END R_OF TYPE

   63 MATRIX_ACCESS_STATE: varConst MATRIX_INIT PRIMITIVE COMMA PRIMITIVE MATRIX_END

   64 EXP: MATRIX_INIT_STATE
   65    | MATRIX_ACCESS_STATE
   66    | UNITARY_STATE
   67    | EXP R_DOT EXP
   68    | EXP COLON COLON EXPLICIT_TYPE
   69    | EXP BOOLEAN_LOGIC EXP
   70    | NOT EXP
   71    | EXP QUESTION EXP COLON EXP
   72    | EXP EQUALITY_TEST EXP
   73    | EXP ORDER_RELATION EXP
   74    | EXP ARITHMETIC_1 EXP
   75    | EXP ARITHMETIC_2 EXP
   76    | '(' EXP ')'
   77    | PRIMITIVE

   78 PRIMITIVE: VAR
   79          | CONST
   80          | INTEGER
   81          | FLOAT
   82          | BOOLEAN
   83          | CHARACTER
   84          | STRING

   85 varConst: VAR
   86         | CONST


Terminals, with rules where they appear

$end (0) 0
'(' (40) 14 24 76
')' (41) 14 24 76
error (256)
BLOCK_INIT (258) 2 15
BLOCK_END (259) 2 15
SEMI_COLON (260) 14 42 43 44 46 48
MATRIX_INIT (261) 22 62 63
MATRIX_END (262) 22 62 63
R_UP (263) 50
R_UM (264) 51
RETURN (265)
R_IF (266) 9
R_ELSE (267) 10
R_WHILE (268) 7 8
R_DO (269) 8
R_FOR (270) 14
R_SWITCH (271) 15
R_CASE (272) 18
R_DEFAULT (273) 19
R_BREAK (274) 20
R_CONTINUE (275) 21
R_IN (276) 58
R_OUT (277) 59
R_IS (278) 52
R_DOT (279) 67
R_OF (280) 62
MTX_INT (281)
MTX_FLOAT (282)
MTX_BOOLEAN (283)
MTX_CHAR (284)
MTX_STRING (285)
INTEGER (286) 53 80
FLOAT (287) 54 81
BOOLEAN (288) 55 82
CHARACTER (289) 56 83
STRING (290) 57 84
VOID (291)
ARITHMETIC_1 (292) 74
ARITHMETIC_2 (293) 75
BOOLEAN_LOGIC (294) 69
EQUALITY_TEST (295) 72
ORDER_RELATION (296) 73
ASSIGNMENT (297) 22 23
NOT (298) 70
COLON (299) 18 19 58 59 62 68 71
QUESTION (300) 71
COMMA (301) 22 27 60 63
VAR (302) 78 85
CONST (303) 79 86
EXPLICIT_TYPE (304) 68
END_LINE (305) 15 34


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
BEFORE_THE_BEGINNING (54)
    on left: 1, on right: 0
BLOCK (55)
    on left: 2, on right: 7 8 9 13 14 24 49
START_SCOPE (56)
    on left: 3, on right: 2
END_SCOPE (57)
    on left: 4, on right: 2
CMDS (58)
    on left: 5 6, on right: 1 2 5 18 19
WHILE (59)
    on left: 7, on right: 32
DO_WHILE (60)
    on left: 8, on right: 33
IF (61)
    on left: 9, on right: 12 31
ELSE (62)
    on left: 10 11, on right: 9
ELSEIF (63)
    on left: 12 13, on right: 10
FOR (64)
    on left: 14, on right: 35
SWITCH (65)
    on left: 15, on right: 36
CASES (66)
    on left: 16 17, on right: 15 17
CASE (67)
    on left: 18, on right: 16 17
DEFAULT (68)
    on left: 19, on right: 16
BREAK (69)
    on left: 20, on right: 37
CONTINUE (70)
    on left: 21, on right: 38
ASSIGNMENT_STATE (71)
    on left: 22 23, on right: 14 45 46
FUNCTION_STATE (72)
    on left: 24, on right: 30
PARAMS (73)
    on left: 25 26, on right: 24
COMMA_PARAMS (74)
    on left: 27 28, on right: 25 27
PARAM (75)
    on left: 29, on right: 25 27
CMD (76)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49, on right: 5
UNITARY_STATE (77)
    on left: 50 51, on right: 14 47 48 66
IS (78)
    on left: 52, on right: 29 39 42
TYPE (79)
    on left: 53 54 55 56 57, on right: 52 62
IN (80)
    on left: 58, on right: 40 43
OUT (81)
    on left: 59, on right: 41 44
COMMA_OUT (82)
    on left: 60 61, on right: 59 60
MATRIX_INIT_STATE (83)
    on left: 62, on right: 64
MATRIX_ACCESS_STATE (84)
    on left: 63, on right: 65
EXP (85)
    on left: 64 65 66 67 68 69 70 71 72 73 74 75 76 77, on right: 7
    8 9 14 15 18 22 23 59 60 67 68 69 70 71 72 73 74 75 76
PRIMITIVE (86)
    on left: 78 79 80 81 82 83 84, on right: 22 62 63 77
varConst (87)
    on left: 85 86, on right: 22 23 24 50 51 52 58 63


State 0

    0 $accept: . BEFORE_THE_BEGINNING $end

    R_IF        shift, and go to state 1
    R_WHILE     shift, and go to state 2
    R_DO        shift, and go to state 3
    R_FOR       shift, and go to state 4
    R_SWITCH    shift, and go to state 5
    R_BREAK     shift, and go to state 6
    R_CONTINUE  shift, and go to state 7
    R_IN        shift, and go to state 8
    R_OUT       shift, and go to state 9
    VAR         shift, and go to state 10
    CONST       shift, and go to state 11
    END_LINE    shift, and go to state 12

    $end      reduce using rule 6 (CMDS)
    $default  reduce using rule 3 (START_SCOPE)

    BEFORE_THE_BEGINNING  go to state 13
    BLOCK                 go to state 14
    START_SCOPE           go to state 15
    CMDS                  go to state 16
    WHILE                 go to state 17
    DO_WHILE              go to state 18
    IF                    go to state 19
    FOR                   go to state 20
    SWITCH                go to state 21
    BREAK                 go to state 22
    CONTINUE              go to state 23
    ASSIGNMENT_STATE      go to state 24
    FUNCTION_STATE        go to state 25
    CMD                   go to state 26
    UNITARY_STATE         go to state 27
    IS                    go to state 28
    IN                    go to state 29
    OUT                   go to state 30
    varConst              go to state 31


State 1

    9 IF: R_IF . EXP BLOCK ELSE

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 45
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 2

    7 WHILE: R_WHILE . EXP BLOCK

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 48
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 3

    8 DO_WHILE: R_DO . BLOCK R_WHILE EXP

    $default  reduce using rule 3 (START_SCOPE)

    BLOCK        go to state 49
    START_SCOPE  go to state 15


State 4

   14 FOR: R_FOR . '(' ASSIGNMENT_STATE SEMI_COLON EXP SEMI_COLON UNITARY_STATE ')' BLOCK

    '('  shift, and go to state 50


State 5

   15 SWITCH: R_SWITCH . EXP BLOCK_INIT END_LINE CASES BLOCK_END

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 51
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 6

   20 BREAK: R_BREAK .

    $default  reduce using rule 20 (BREAK)


State 7

   21 CONTINUE: R_CONTINUE .

    $default  reduce using rule 21 (CONTINUE)


State 8

   58 IN: R_IN . COLON varConst

    COLON  shift, and go to state 52


State 9

   59 OUT: R_OUT . COLON EXP COMMA_OUT

    COLON  shift, and go to state 53


State 10

   85 varConst: VAR .

    $default  reduce using rule 85 (varConst)


State 11

   86 varConst: CONST .

    $default  reduce using rule 86 (varConst)


State 12

   34 CMD: END_LINE .

    $default  reduce using rule 34 (CMD)


State 13

    0 $accept: BEFORE_THE_BEGINNING . $end

    $end  shift, and go to state 54


State 14

   49 CMD: BLOCK .

    $default  reduce using rule 49 (CMD)


State 15

    2 BLOCK: START_SCOPE . BLOCK_INIT CMDS BLOCK_END END_SCOPE

    BLOCK_INIT  shift, and go to state 55


State 16

    1 BEFORE_THE_BEGINNING: CMDS .

    $default  reduce using rule 1 (BEFORE_THE_BEGINNING)


State 17

   32 CMD: WHILE .

    $default  reduce using rule 32 (CMD)


State 18

   33 CMD: DO_WHILE .

    $default  reduce using rule 33 (CMD)


State 19

   31 CMD: IF .

    $default  reduce using rule 31 (CMD)


State 20

   35 CMD: FOR .

    $default  reduce using rule 35 (CMD)


State 21

   36 CMD: SWITCH .

    $default  reduce using rule 36 (CMD)


State 22

   37 CMD: BREAK .

    $default  reduce using rule 37 (CMD)


State 23

   38 CMD: CONTINUE .

    $default  reduce using rule 38 (CMD)


State 24

   45 CMD: ASSIGNMENT_STATE .
   46    | ASSIGNMENT_STATE . SEMI_COLON

    SEMI_COLON  shift, and go to state 56

    $default  reduce using rule 45 (CMD)


State 25

   30 CMD: FUNCTION_STATE .

    $default  reduce using rule 30 (CMD)


State 26

    5 CMDS: CMD . CMDS

    R_IF        shift, and go to state 1
    R_WHILE     shift, and go to state 2
    R_DO        shift, and go to state 3
    R_FOR       shift, and go to state 4
    R_SWITCH    shift, and go to state 5
    R_BREAK     shift, and go to state 6
    R_CONTINUE  shift, and go to state 7
    R_IN        shift, and go to state 8
    R_OUT       shift, and go to state 9
    VAR         shift, and go to state 10
    CONST       shift, and go to state 11
    END_LINE    shift, and go to state 12

    BLOCK_INIT  reduce using rule 3 (START_SCOPE)
    $default    reduce using rule 6 (CMDS)

    BLOCK             go to state 14
    START_SCOPE       go to state 15
    CMDS              go to state 57
    WHILE             go to state 17
    DO_WHILE          go to state 18
    IF                go to state 19
    FOR               go to state 20
    SWITCH            go to state 21
    BREAK             go to state 22
    CONTINUE          go to state 23
    ASSIGNMENT_STATE  go to state 24
    FUNCTION_STATE    go to state 25
    CMD               go to state 26
    UNITARY_STATE     go to state 27
    IS                go to state 28
    IN                go to state 29
    OUT               go to state 30
    varConst          go to state 31


State 27

   47 CMD: UNITARY_STATE .
   48    | UNITARY_STATE . SEMI_COLON

    SEMI_COLON  shift, and go to state 58

    $default  reduce using rule 47 (CMD)


State 28

   39 CMD: IS .
   42    | IS . SEMI_COLON

    SEMI_COLON  shift, and go to state 59

    $default  reduce using rule 39 (CMD)


State 29

   40 CMD: IN .
   43    | IN . SEMI_COLON

    SEMI_COLON  shift, and go to state 60

    $default  reduce using rule 40 (CMD)


State 30

   41 CMD: OUT .
   44    | OUT . SEMI_COLON

    SEMI_COLON  shift, and go to state 61

    $default  reduce using rule 41 (CMD)


State 31

   22 ASSIGNMENT_STATE: varConst . MATRIX_INIT PRIMITIVE COMMA PRIMITIVE MATRIX_END ASSIGNMENT EXP
   23                 | varConst . ASSIGNMENT EXP
   24 FUNCTION_STATE: varConst . '(' PARAMS ')' BLOCK
   50 UNITARY_STATE: varConst . R_UP
   51              | varConst . R_UM
   52 IS: varConst . R_IS TYPE

    MATRIX_INIT  shift, and go to state 62
    R_UP         shift, and go to state 63
    R_UM         shift, and go to state 64
    R_IS         shift, and go to state 65
    ASSIGNMENT   shift, and go to state 66
    '('          shift, and go to state 67


State 32

   62 MATRIX_INIT_STATE: MATRIX_INIT . PRIMITIVE COLON PRIMITIVE MATRIX_END R_OF TYPE

    INTEGER    shift, and go to state 33
    FLOAT      shift, and go to state 34
    BOOLEAN    shift, and go to state 35
    CHARACTER  shift, and go to state 36
    STRING     shift, and go to state 37
    VAR        shift, and go to state 68
    CONST      shift, and go to state 69

    PRIMITIVE  go to state 70


State 33

   80 PRIMITIVE: INTEGER .

    $default  reduce using rule 80 (PRIMITIVE)


State 34

   81 PRIMITIVE: FLOAT .

    $default  reduce using rule 81 (PRIMITIVE)


State 35

   82 PRIMITIVE: BOOLEAN .

    $default  reduce using rule 82 (PRIMITIVE)


State 36

   83 PRIMITIVE: CHARACTER .

    $default  reduce using rule 83 (PRIMITIVE)


State 37

   84 PRIMITIVE: STRING .

    $default  reduce using rule 84 (PRIMITIVE)


State 38

   70 EXP: NOT . EXP

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 71
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 39

   78 PRIMITIVE: VAR .
   85 varConst: VAR .

    MATRIX_INIT  reduce using rule 85 (varConst)
    R_UP         reduce using rule 85 (varConst)
    R_UM         reduce using rule 85 (varConst)
    $default     reduce using rule 78 (PRIMITIVE)


State 40

   79 PRIMITIVE: CONST .
   86 varConst: CONST .

    MATRIX_INIT  reduce using rule 86 (varConst)
    R_UP         reduce using rule 86 (varConst)
    R_UM         reduce using rule 86 (varConst)
    $default     reduce using rule 79 (PRIMITIVE)


State 41

   76 EXP: '(' . EXP ')'

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 72
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 42

   66 EXP: UNITARY_STATE .

    $default  reduce using rule 66 (EXP)


State 43

   64 EXP: MATRIX_INIT_STATE .

    $default  reduce using rule 64 (EXP)


State 44

   65 EXP: MATRIX_ACCESS_STATE .

    $default  reduce using rule 65 (EXP)


State 45

    9 IF: R_IF EXP . BLOCK ELSE
   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   71    | EXP . QUESTION EXP COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 73
    ARITHMETIC_1    shift, and go to state 74
    ARITHMETIC_2    shift, and go to state 75
    BOOLEAN_LOGIC   shift, and go to state 76
    EQUALITY_TEST   shift, and go to state 77
    ORDER_RELATION  shift, and go to state 78
    COLON           shift, and go to state 79
    QUESTION        shift, and go to state 80

    $default  reduce using rule 3 (START_SCOPE)

    BLOCK        go to state 81
    START_SCOPE  go to state 15


State 46

   77 EXP: PRIMITIVE .

    $default  reduce using rule 77 (EXP)


State 47

   50 UNITARY_STATE: varConst . R_UP
   51              | varConst . R_UM
   63 MATRIX_ACCESS_STATE: varConst . MATRIX_INIT PRIMITIVE COMMA PRIMITIVE MATRIX_END

    MATRIX_INIT  shift, and go to state 82
    R_UP         shift, and go to state 63
    R_UM         shift, and go to state 64


State 48

    7 WHILE: R_WHILE EXP . BLOCK
   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   71    | EXP . QUESTION EXP COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 73
    ARITHMETIC_1    shift, and go to state 74
    ARITHMETIC_2    shift, and go to state 75
    BOOLEAN_LOGIC   shift, and go to state 76
    EQUALITY_TEST   shift, and go to state 77
    ORDER_RELATION  shift, and go to state 78
    COLON           shift, and go to state 79
    QUESTION        shift, and go to state 80

    $default  reduce using rule 3 (START_SCOPE)

    BLOCK        go to state 83
    START_SCOPE  go to state 15


State 49

    8 DO_WHILE: R_DO BLOCK . R_WHILE EXP

    R_WHILE  shift, and go to state 84


State 50

   14 FOR: R_FOR '(' . ASSIGNMENT_STATE SEMI_COLON EXP SEMI_COLON UNITARY_STATE ')' BLOCK

    VAR    shift, and go to state 10
    CONST  shift, and go to state 11

    ASSIGNMENT_STATE  go to state 85
    varConst          go to state 86


State 51

   15 SWITCH: R_SWITCH EXP . BLOCK_INIT END_LINE CASES BLOCK_END
   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   71    | EXP . QUESTION EXP COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP

    BLOCK_INIT      shift, and go to state 87
    R_DOT           shift, and go to state 73
    ARITHMETIC_1    shift, and go to state 74
    ARITHMETIC_2    shift, and go to state 75
    BOOLEAN_LOGIC   shift, and go to state 76
    EQUALITY_TEST   shift, and go to state 77
    ORDER_RELATION  shift, and go to state 78
    COLON           shift, and go to state 79
    QUESTION        shift, and go to state 80


State 52

   58 IN: R_IN COLON . varConst

    VAR    shift, and go to state 10
    CONST  shift, and go to state 11

    varConst  go to state 88


State 53

   59 OUT: R_OUT COLON . EXP COMMA_OUT

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 89
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 54

    0 $accept: BEFORE_THE_BEGINNING $end .

    $default  accept


State 55

    2 BLOCK: START_SCOPE BLOCK_INIT . CMDS BLOCK_END END_SCOPE

    R_IF        shift, and go to state 1
    R_WHILE     shift, and go to state 2
    R_DO        shift, and go to state 3
    R_FOR       shift, and go to state 4
    R_SWITCH    shift, and go to state 5
    R_BREAK     shift, and go to state 6
    R_CONTINUE  shift, and go to state 7
    R_IN        shift, and go to state 8
    R_OUT       shift, and go to state 9
    VAR         shift, and go to state 10
    CONST       shift, and go to state 11
    END_LINE    shift, and go to state 12

    BLOCK_END  reduce using rule 6 (CMDS)
    $default   reduce using rule 3 (START_SCOPE)

    BLOCK             go to state 14
    START_SCOPE       go to state 15
    CMDS              go to state 90
    WHILE             go to state 17
    DO_WHILE          go to state 18
    IF                go to state 19
    FOR               go to state 20
    SWITCH            go to state 21
    BREAK             go to state 22
    CONTINUE          go to state 23
    ASSIGNMENT_STATE  go to state 24
    FUNCTION_STATE    go to state 25
    CMD               go to state 26
    UNITARY_STATE     go to state 27
    IS                go to state 28
    IN                go to state 29
    OUT               go to state 30
    varConst          go to state 31


State 56

   46 CMD: ASSIGNMENT_STATE SEMI_COLON .

    $default  reduce using rule 46 (CMD)


State 57

    5 CMDS: CMD CMDS .

    $default  reduce using rule 5 (CMDS)


State 58

   48 CMD: UNITARY_STATE SEMI_COLON .

    $default  reduce using rule 48 (CMD)


State 59

   42 CMD: IS SEMI_COLON .

    $default  reduce using rule 42 (CMD)


State 60

   43 CMD: IN SEMI_COLON .

    $default  reduce using rule 43 (CMD)


State 61

   44 CMD: OUT SEMI_COLON .

    $default  reduce using rule 44 (CMD)


State 62

   22 ASSIGNMENT_STATE: varConst MATRIX_INIT . PRIMITIVE COMMA PRIMITIVE MATRIX_END ASSIGNMENT EXP

    INTEGER    shift, and go to state 33
    FLOAT      shift, and go to state 34
    BOOLEAN    shift, and go to state 35
    CHARACTER  shift, and go to state 36
    STRING     shift, and go to state 37
    VAR        shift, and go to state 68
    CONST      shift, and go to state 69

    PRIMITIVE  go to state 91


State 63

   50 UNITARY_STATE: varConst R_UP .

    $default  reduce using rule 50 (UNITARY_STATE)


State 64

   51 UNITARY_STATE: varConst R_UM .

    $default  reduce using rule 51 (UNITARY_STATE)


State 65

   52 IS: varConst R_IS . TYPE

    INTEGER    shift, and go to state 92
    FLOAT      shift, and go to state 93
    BOOLEAN    shift, and go to state 94
    CHARACTER  shift, and go to state 95
    STRING     shift, and go to state 96

    TYPE  go to state 97


State 66

   23 ASSIGNMENT_STATE: varConst ASSIGNMENT . EXP

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 98
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 67

   24 FUNCTION_STATE: varConst '(' . PARAMS ')' BLOCK

    VAR    shift, and go to state 10
    CONST  shift, and go to state 11

    $default  reduce using rule 26 (PARAMS)

    PARAMS    go to state 99
    PARAM     go to state 100
    IS        go to state 101
    varConst  go to state 102


State 68

   78 PRIMITIVE: VAR .

    $default  reduce using rule 78 (PRIMITIVE)


State 69

   79 PRIMITIVE: CONST .

    $default  reduce using rule 79 (PRIMITIVE)


State 70

   62 MATRIX_INIT_STATE: MATRIX_INIT PRIMITIVE . COLON PRIMITIVE MATRIX_END R_OF TYPE

    COLON  shift, and go to state 103


State 71

   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   70    | NOT EXP .
   71    | EXP . QUESTION EXP COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP

    R_DOT         shift, and go to state 73
    ARITHMETIC_1  shift, and go to state 74
    ARITHMETIC_2  shift, and go to state 75

    $default  reduce using rule 70 (EXP)


State 72

   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   71    | EXP . QUESTION EXP COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP
   76    | '(' EXP . ')'

    R_DOT           shift, and go to state 73
    ARITHMETIC_1    shift, and go to state 74
    ARITHMETIC_2    shift, and go to state 75
    BOOLEAN_LOGIC   shift, and go to state 76
    EQUALITY_TEST   shift, and go to state 77
    ORDER_RELATION  shift, and go to state 78
    COLON           shift, and go to state 79
    QUESTION        shift, and go to state 80
    ')'             shift, and go to state 104


State 73

   67 EXP: EXP R_DOT . EXP

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 105
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 74

   74 EXP: EXP ARITHMETIC_1 . EXP

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 106
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 75

   75 EXP: EXP ARITHMETIC_2 . EXP

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 107
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 76

   69 EXP: EXP BOOLEAN_LOGIC . EXP

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 108
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 77

   72 EXP: EXP EQUALITY_TEST . EXP

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 109
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 78

   73 EXP: EXP ORDER_RELATION . EXP

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 110
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 79

   68 EXP: EXP COLON . COLON EXPLICIT_TYPE

    COLON  shift, and go to state 111


State 80

   71 EXP: EXP QUESTION . EXP COLON EXP

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 112
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 81

    9 IF: R_IF EXP BLOCK . ELSE

    R_ELSE  shift, and go to state 113

    $default  reduce using rule 11 (ELSE)

    ELSE  go to state 114


State 82

   63 MATRIX_ACCESS_STATE: varConst MATRIX_INIT . PRIMITIVE COMMA PRIMITIVE MATRIX_END

    INTEGER    shift, and go to state 33
    FLOAT      shift, and go to state 34
    BOOLEAN    shift, and go to state 35
    CHARACTER  shift, and go to state 36
    STRING     shift, and go to state 37
    VAR        shift, and go to state 68
    CONST      shift, and go to state 69

    PRIMITIVE  go to state 115


State 83

    7 WHILE: R_WHILE EXP BLOCK .

    $default  reduce using rule 7 (WHILE)


State 84

    8 DO_WHILE: R_DO BLOCK R_WHILE . EXP

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 116
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 85

   14 FOR: R_FOR '(' ASSIGNMENT_STATE . SEMI_COLON EXP SEMI_COLON UNITARY_STATE ')' BLOCK

    SEMI_COLON  shift, and go to state 117


State 86

   22 ASSIGNMENT_STATE: varConst . MATRIX_INIT PRIMITIVE COMMA PRIMITIVE MATRIX_END ASSIGNMENT EXP
   23                 | varConst . ASSIGNMENT EXP

    MATRIX_INIT  shift, and go to state 62
    ASSIGNMENT   shift, and go to state 66


State 87

   15 SWITCH: R_SWITCH EXP BLOCK_INIT . END_LINE CASES BLOCK_END

    END_LINE  shift, and go to state 118


State 88

   58 IN: R_IN COLON varConst .

    $default  reduce using rule 58 (IN)


State 89

   59 OUT: R_OUT COLON EXP . COMMA_OUT
   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   71    | EXP . QUESTION EXP COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 73
    ARITHMETIC_1    shift, and go to state 74
    ARITHMETIC_2    shift, and go to state 75
    BOOLEAN_LOGIC   shift, and go to state 76
    EQUALITY_TEST   shift, and go to state 77
    ORDER_RELATION  shift, and go to state 78
    COLON           shift, and go to state 79
    QUESTION        shift, and go to state 80
    COMMA           shift, and go to state 119

    $default  reduce using rule 61 (COMMA_OUT)

    COMMA_OUT  go to state 120


State 90

    2 BLOCK: START_SCOPE BLOCK_INIT CMDS . BLOCK_END END_SCOPE

    BLOCK_END  shift, and go to state 121


State 91

   22 ASSIGNMENT_STATE: varConst MATRIX_INIT PRIMITIVE . COMMA PRIMITIVE MATRIX_END ASSIGNMENT EXP

    COMMA  shift, and go to state 122


State 92

   53 TYPE: INTEGER .

    $default  reduce using rule 53 (TYPE)


State 93

   54 TYPE: FLOAT .

    $default  reduce using rule 54 (TYPE)


State 94

   55 TYPE: BOOLEAN .

    $default  reduce using rule 55 (TYPE)


State 95

   56 TYPE: CHARACTER .

    $default  reduce using rule 56 (TYPE)


State 96

   57 TYPE: STRING .

    $default  reduce using rule 57 (TYPE)


State 97

   52 IS: varConst R_IS TYPE .

    $default  reduce using rule 52 (IS)


State 98

   23 ASSIGNMENT_STATE: varConst ASSIGNMENT EXP .
   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   71    | EXP . QUESTION EXP COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 73
    ARITHMETIC_1    shift, and go to state 74
    ARITHMETIC_2    shift, and go to state 75
    BOOLEAN_LOGIC   shift, and go to state 76
    EQUALITY_TEST   shift, and go to state 77
    ORDER_RELATION  shift, and go to state 78
    COLON           shift, and go to state 79
    QUESTION        shift, and go to state 80

    $default  reduce using rule 23 (ASSIGNMENT_STATE)


State 99

   24 FUNCTION_STATE: varConst '(' PARAMS . ')' BLOCK

    ')'  shift, and go to state 123


State 100

   25 PARAMS: PARAM . COMMA_PARAMS

    COMMA  shift, and go to state 124

    $default  reduce using rule 28 (COMMA_PARAMS)

    COMMA_PARAMS  go to state 125


State 101

   29 PARAM: IS .

    $default  reduce using rule 29 (PARAM)


State 102

   52 IS: varConst . R_IS TYPE

    R_IS  shift, and go to state 65


State 103

   62 MATRIX_INIT_STATE: MATRIX_INIT PRIMITIVE COLON . PRIMITIVE MATRIX_END R_OF TYPE

    INTEGER    shift, and go to state 33
    FLOAT      shift, and go to state 34
    BOOLEAN    shift, and go to state 35
    CHARACTER  shift, and go to state 36
    STRING     shift, and go to state 37
    VAR        shift, and go to state 68
    CONST      shift, and go to state 69

    PRIMITIVE  go to state 126


State 104

   76 EXP: '(' EXP ')' .

    $default  reduce using rule 76 (EXP)


State 105

   67 EXP: EXP . R_DOT EXP
   67    | EXP R_DOT EXP .
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   71    | EXP . QUESTION EXP COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 74
    ARITHMETIC_2  shift, and go to state 75

    $default  reduce using rule 67 (EXP)


State 106

   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   71    | EXP . QUESTION EXP COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   74    | EXP ARITHMETIC_1 EXP .
   75    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_2  shift, and go to state 75

    $default  reduce using rule 74 (EXP)


State 107

   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   71    | EXP . QUESTION EXP COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP
   75    | EXP ARITHMETIC_2 EXP .

    $default  reduce using rule 75 (EXP)


State 108

   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   69    | EXP BOOLEAN_LOGIC EXP .
   71    | EXP . QUESTION EXP COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 73
    ARITHMETIC_1    shift, and go to state 74
    ARITHMETIC_2    shift, and go to state 75
    EQUALITY_TEST   shift, and go to state 77
    ORDER_RELATION  shift, and go to state 78
    COLON           shift, and go to state 79
    QUESTION        shift, and go to state 80

    $default  reduce using rule 69 (EXP)


State 109

   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   71    | EXP . QUESTION EXP COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   72    | EXP EQUALITY_TEST EXP .
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP

    R_DOT         shift, and go to state 73
    ARITHMETIC_1  shift, and go to state 74
    ARITHMETIC_2  shift, and go to state 75
    COLON         shift, and go to state 79
    QUESTION      shift, and go to state 80

    $default  reduce using rule 72 (EXP)


State 110

   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   71    | EXP . QUESTION EXP COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   73    | EXP ORDER_RELATION EXP .
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP

    R_DOT         shift, and go to state 73
    ARITHMETIC_1  shift, and go to state 74
    ARITHMETIC_2  shift, and go to state 75
    COLON         shift, and go to state 79
    QUESTION      shift, and go to state 80

    $default  reduce using rule 73 (EXP)


State 111

   68 EXP: EXP COLON COLON . EXPLICIT_TYPE

    EXPLICIT_TYPE  shift, and go to state 127


State 112

   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   71    | EXP . QUESTION EXP COLON EXP
   71    | EXP QUESTION EXP . COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 73
    ARITHMETIC_1    shift, and go to state 74
    ARITHMETIC_2    shift, and go to state 75
    BOOLEAN_LOGIC   shift, and go to state 76
    EQUALITY_TEST   shift, and go to state 77
    ORDER_RELATION  shift, and go to state 78
    COLON           shift, and go to state 128
    QUESTION        shift, and go to state 80


State 113

   10 ELSE: R_ELSE . ELSEIF

    R_IF  shift, and go to state 1

    $default  reduce using rule 3 (START_SCOPE)

    BLOCK        go to state 129
    START_SCOPE  go to state 15
    IF           go to state 130
    ELSEIF       go to state 131


State 114

    9 IF: R_IF EXP BLOCK ELSE .

    $default  reduce using rule 9 (IF)


State 115

   63 MATRIX_ACCESS_STATE: varConst MATRIX_INIT PRIMITIVE . COMMA PRIMITIVE MATRIX_END

    COMMA  shift, and go to state 132


State 116

    8 DO_WHILE: R_DO BLOCK R_WHILE EXP .
   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   71    | EXP . QUESTION EXP COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 73
    ARITHMETIC_1    shift, and go to state 74
    ARITHMETIC_2    shift, and go to state 75
    BOOLEAN_LOGIC   shift, and go to state 76
    EQUALITY_TEST   shift, and go to state 77
    ORDER_RELATION  shift, and go to state 78
    COLON           shift, and go to state 79
    QUESTION        shift, and go to state 80

    $default  reduce using rule 8 (DO_WHILE)


State 117

   14 FOR: R_FOR '(' ASSIGNMENT_STATE SEMI_COLON . EXP SEMI_COLON UNITARY_STATE ')' BLOCK

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 133
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 118

   15 SWITCH: R_SWITCH EXP BLOCK_INIT END_LINE . CASES BLOCK_END

    R_CASE  shift, and go to state 134

    CASES  go to state 135
    CASE   go to state 136


State 119

   60 COMMA_OUT: COMMA . EXP COMMA_OUT

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 137
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 120

   59 OUT: R_OUT COLON EXP COMMA_OUT .

    $default  reduce using rule 59 (OUT)


State 121

    2 BLOCK: START_SCOPE BLOCK_INIT CMDS BLOCK_END . END_SCOPE

    $default  reduce using rule 4 (END_SCOPE)

    END_SCOPE  go to state 138


State 122

   22 ASSIGNMENT_STATE: varConst MATRIX_INIT PRIMITIVE COMMA . PRIMITIVE MATRIX_END ASSIGNMENT EXP

    INTEGER    shift, and go to state 33
    FLOAT      shift, and go to state 34
    BOOLEAN    shift, and go to state 35
    CHARACTER  shift, and go to state 36
    STRING     shift, and go to state 37
    VAR        shift, and go to state 68
    CONST      shift, and go to state 69

    PRIMITIVE  go to state 139


State 123

   24 FUNCTION_STATE: varConst '(' PARAMS ')' . BLOCK

    $default  reduce using rule 3 (START_SCOPE)

    BLOCK        go to state 140
    START_SCOPE  go to state 15


State 124

   27 COMMA_PARAMS: COMMA . PARAM COMMA_PARAMS

    VAR    shift, and go to state 10
    CONST  shift, and go to state 11

    PARAM     go to state 141
    IS        go to state 101
    varConst  go to state 102


State 125

   25 PARAMS: PARAM COMMA_PARAMS .

    $default  reduce using rule 25 (PARAMS)


State 126

   62 MATRIX_INIT_STATE: MATRIX_INIT PRIMITIVE COLON PRIMITIVE . MATRIX_END R_OF TYPE

    MATRIX_END  shift, and go to state 142


State 127

   68 EXP: EXP COLON COLON EXPLICIT_TYPE .

    $default  reduce using rule 68 (EXP)


State 128

   68 EXP: EXP COLON . COLON EXPLICIT_TYPE
   71    | EXP QUESTION EXP COLON . EXP

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    COLON        shift, and go to state 111
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 143
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 129

   13 ELSEIF: BLOCK .

    $default  reduce using rule 13 (ELSEIF)


State 130

   12 ELSEIF: IF .

    $default  reduce using rule 12 (ELSEIF)


State 131

   10 ELSE: R_ELSE ELSEIF .

    $default  reduce using rule 10 (ELSE)


State 132

   63 MATRIX_ACCESS_STATE: varConst MATRIX_INIT PRIMITIVE COMMA . PRIMITIVE MATRIX_END

    INTEGER    shift, and go to state 33
    FLOAT      shift, and go to state 34
    BOOLEAN    shift, and go to state 35
    CHARACTER  shift, and go to state 36
    STRING     shift, and go to state 37
    VAR        shift, and go to state 68
    CONST      shift, and go to state 69

    PRIMITIVE  go to state 144


State 133

   14 FOR: R_FOR '(' ASSIGNMENT_STATE SEMI_COLON EXP . SEMI_COLON UNITARY_STATE ')' BLOCK
   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   71    | EXP . QUESTION EXP COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP

    SEMI_COLON      shift, and go to state 145
    R_DOT           shift, and go to state 73
    ARITHMETIC_1    shift, and go to state 74
    ARITHMETIC_2    shift, and go to state 75
    BOOLEAN_LOGIC   shift, and go to state 76
    EQUALITY_TEST   shift, and go to state 77
    ORDER_RELATION  shift, and go to state 78
    COLON           shift, and go to state 79
    QUESTION        shift, and go to state 80


State 134

   18 CASE: R_CASE . EXP COLON CMDS

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 146
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 135

   15 SWITCH: R_SWITCH EXP BLOCK_INIT END_LINE CASES . BLOCK_END

    BLOCK_END  shift, and go to state 147


State 136

   16 CASES: CASE . DEFAULT
   17      | CASE . CASES

    R_CASE     shift, and go to state 134
    R_DEFAULT  shift, and go to state 148

    CASES    go to state 149
    CASE     go to state 136
    DEFAULT  go to state 150


State 137

   60 COMMA_OUT: COMMA EXP . COMMA_OUT
   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   71    | EXP . QUESTION EXP COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 73
    ARITHMETIC_1    shift, and go to state 74
    ARITHMETIC_2    shift, and go to state 75
    BOOLEAN_LOGIC   shift, and go to state 76
    EQUALITY_TEST   shift, and go to state 77
    ORDER_RELATION  shift, and go to state 78
    COLON           shift, and go to state 79
    QUESTION        shift, and go to state 80
    COMMA           shift, and go to state 119

    $default  reduce using rule 61 (COMMA_OUT)

    COMMA_OUT  go to state 151


State 138

    2 BLOCK: START_SCOPE BLOCK_INIT CMDS BLOCK_END END_SCOPE .

    $default  reduce using rule 2 (BLOCK)


State 139

   22 ASSIGNMENT_STATE: varConst MATRIX_INIT PRIMITIVE COMMA PRIMITIVE . MATRIX_END ASSIGNMENT EXP

    MATRIX_END  shift, and go to state 152


State 140

   24 FUNCTION_STATE: varConst '(' PARAMS ')' BLOCK .

    $default  reduce using rule 24 (FUNCTION_STATE)


State 141

   27 COMMA_PARAMS: COMMA PARAM . COMMA_PARAMS

    COMMA  shift, and go to state 124

    $default  reduce using rule 28 (COMMA_PARAMS)

    COMMA_PARAMS  go to state 153


State 142

   62 MATRIX_INIT_STATE: MATRIX_INIT PRIMITIVE COLON PRIMITIVE MATRIX_END . R_OF TYPE

    R_OF  shift, and go to state 154


State 143

   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   71    | EXP . QUESTION EXP COLON EXP
   71    | EXP QUESTION EXP COLON EXP .
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP

    R_DOT         shift, and go to state 73
    ARITHMETIC_1  shift, and go to state 74
    ARITHMETIC_2  shift, and go to state 75

    $default  reduce using rule 71 (EXP)


State 144

   63 MATRIX_ACCESS_STATE: varConst MATRIX_INIT PRIMITIVE COMMA PRIMITIVE . MATRIX_END

    MATRIX_END  shift, and go to state 155


State 145

   14 FOR: R_FOR '(' ASSIGNMENT_STATE SEMI_COLON EXP SEMI_COLON . UNITARY_STATE ')' BLOCK

    VAR    shift, and go to state 10
    CONST  shift, and go to state 11

    UNITARY_STATE  go to state 156
    varConst       go to state 157


State 146

   18 CASE: R_CASE EXP . COLON CMDS
   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   71    | EXP . QUESTION EXP COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 73
    ARITHMETIC_1    shift, and go to state 74
    ARITHMETIC_2    shift, and go to state 75
    BOOLEAN_LOGIC   shift, and go to state 76
    EQUALITY_TEST   shift, and go to state 77
    ORDER_RELATION  shift, and go to state 78
    COLON           shift, and go to state 158
    QUESTION        shift, and go to state 80


State 147

   15 SWITCH: R_SWITCH EXP BLOCK_INIT END_LINE CASES BLOCK_END .

    $default  reduce using rule 15 (SWITCH)


State 148

   19 DEFAULT: R_DEFAULT . COLON CMDS

    COLON  shift, and go to state 159


State 149

   17 CASES: CASE CASES .

    $default  reduce using rule 17 (CASES)


State 150

   16 CASES: CASE DEFAULT .

    $default  reduce using rule 16 (CASES)


State 151

   60 COMMA_OUT: COMMA EXP COMMA_OUT .

    $default  reduce using rule 60 (COMMA_OUT)


State 152

   22 ASSIGNMENT_STATE: varConst MATRIX_INIT PRIMITIVE COMMA PRIMITIVE MATRIX_END . ASSIGNMENT EXP

    ASSIGNMENT  shift, and go to state 160


State 153

   27 COMMA_PARAMS: COMMA PARAM COMMA_PARAMS .

    $default  reduce using rule 27 (COMMA_PARAMS)


State 154

   62 MATRIX_INIT_STATE: MATRIX_INIT PRIMITIVE COLON PRIMITIVE MATRIX_END R_OF . TYPE

    INTEGER    shift, and go to state 92
    FLOAT      shift, and go to state 93
    BOOLEAN    shift, and go to state 94
    CHARACTER  shift, and go to state 95
    STRING     shift, and go to state 96

    TYPE  go to state 161


State 155

   63 MATRIX_ACCESS_STATE: varConst MATRIX_INIT PRIMITIVE COMMA PRIMITIVE MATRIX_END .

    $default  reduce using rule 63 (MATRIX_ACCESS_STATE)


State 156

   14 FOR: R_FOR '(' ASSIGNMENT_STATE SEMI_COLON EXP SEMI_COLON UNITARY_STATE . ')' BLOCK

    ')'  shift, and go to state 162


State 157

   50 UNITARY_STATE: varConst . R_UP
   51              | varConst . R_UM

    R_UP  shift, and go to state 63
    R_UM  shift, and go to state 64


State 158

   18 CASE: R_CASE EXP COLON . CMDS
   68 EXP: EXP COLON . COLON EXPLICIT_TYPE

    R_IF        shift, and go to state 1
    R_WHILE     shift, and go to state 2
    R_DO        shift, and go to state 3
    R_FOR       shift, and go to state 4
    R_SWITCH    shift, and go to state 5
    R_BREAK     shift, and go to state 6
    R_CONTINUE  shift, and go to state 7
    R_IN        shift, and go to state 8
    R_OUT       shift, and go to state 9
    COLON       shift, and go to state 111
    VAR         shift, and go to state 10
    CONST       shift, and go to state 11
    END_LINE    shift, and go to state 12

    BLOCK_INIT  reduce using rule 3 (START_SCOPE)
    $default    reduce using rule 6 (CMDS)

    BLOCK             go to state 14
    START_SCOPE       go to state 15
    CMDS              go to state 163
    WHILE             go to state 17
    DO_WHILE          go to state 18
    IF                go to state 19
    FOR               go to state 20
    SWITCH            go to state 21
    BREAK             go to state 22
    CONTINUE          go to state 23
    ASSIGNMENT_STATE  go to state 24
    FUNCTION_STATE    go to state 25
    CMD               go to state 26
    UNITARY_STATE     go to state 27
    IS                go to state 28
    IN                go to state 29
    OUT               go to state 30
    varConst          go to state 31


State 159

   19 DEFAULT: R_DEFAULT COLON . CMDS

    R_IF        shift, and go to state 1
    R_WHILE     shift, and go to state 2
    R_DO        shift, and go to state 3
    R_FOR       shift, and go to state 4
    R_SWITCH    shift, and go to state 5
    R_BREAK     shift, and go to state 6
    R_CONTINUE  shift, and go to state 7
    R_IN        shift, and go to state 8
    R_OUT       shift, and go to state 9
    VAR         shift, and go to state 10
    CONST       shift, and go to state 11
    END_LINE    shift, and go to state 12

    BLOCK_END  reduce using rule 6 (CMDS)
    $default   reduce using rule 3 (START_SCOPE)

    BLOCK             go to state 14
    START_SCOPE       go to state 15
    CMDS              go to state 164
    WHILE             go to state 17
    DO_WHILE          go to state 18
    IF                go to state 19
    FOR               go to state 20
    SWITCH            go to state 21
    BREAK             go to state 22
    CONTINUE          go to state 23
    ASSIGNMENT_STATE  go to state 24
    FUNCTION_STATE    go to state 25
    CMD               go to state 26
    UNITARY_STATE     go to state 27
    IS                go to state 28
    IN                go to state 29
    OUT               go to state 30
    varConst          go to state 31


State 160

   22 ASSIGNMENT_STATE: varConst MATRIX_INIT PRIMITIVE COMMA PRIMITIVE MATRIX_END ASSIGNMENT . EXP

    MATRIX_INIT  shift, and go to state 32
    INTEGER      shift, and go to state 33
    FLOAT        shift, and go to state 34
    BOOLEAN      shift, and go to state 35
    CHARACTER    shift, and go to state 36
    STRING       shift, and go to state 37
    NOT          shift, and go to state 38
    VAR          shift, and go to state 39
    CONST        shift, and go to state 40
    '('          shift, and go to state 41

    UNITARY_STATE        go to state 42
    MATRIX_INIT_STATE    go to state 43
    MATRIX_ACCESS_STATE  go to state 44
    EXP                  go to state 165
    PRIMITIVE            go to state 46
    varConst             go to state 47


State 161

   62 MATRIX_INIT_STATE: MATRIX_INIT PRIMITIVE COLON PRIMITIVE MATRIX_END R_OF TYPE .

    $default  reduce using rule 62 (MATRIX_INIT_STATE)


State 162

   14 FOR: R_FOR '(' ASSIGNMENT_STATE SEMI_COLON EXP SEMI_COLON UNITARY_STATE ')' . BLOCK

    $default  reduce using rule 3 (START_SCOPE)

    BLOCK        go to state 166
    START_SCOPE  go to state 15


State 163

   18 CASE: R_CASE EXP COLON CMDS .

    $default  reduce using rule 18 (CASE)


State 164

   19 DEFAULT: R_DEFAULT COLON CMDS .

    $default  reduce using rule 19 (DEFAULT)


State 165

   22 ASSIGNMENT_STATE: varConst MATRIX_INIT PRIMITIVE COMMA PRIMITIVE MATRIX_END ASSIGNMENT EXP .
   67 EXP: EXP . R_DOT EXP
   68    | EXP . COLON COLON EXPLICIT_TYPE
   69    | EXP . BOOLEAN_LOGIC EXP
   71    | EXP . QUESTION EXP COLON EXP
   72    | EXP . EQUALITY_TEST EXP
   73    | EXP . ORDER_RELATION EXP
   74    | EXP . ARITHMETIC_1 EXP
   75    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 73
    ARITHMETIC_1    shift, and go to state 74
    ARITHMETIC_2    shift, and go to state 75
    BOOLEAN_LOGIC   shift, and go to state 76
    EQUALITY_TEST   shift, and go to state 77
    ORDER_RELATION  shift, and go to state 78
    COLON           shift, and go to state 79
    QUESTION        shift, and go to state 80

    $default  reduce using rule 22 (ASSIGNMENT_STATE)


State 166

   14 FOR: R_FOR '(' ASSIGNMENT_STATE SEMI_COLON EXP SEMI_COLON UNITARY_STATE ')' BLOCK .

    $default  reduce using rule 14 (FOR)
