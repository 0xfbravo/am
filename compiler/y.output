Terminals unused in grammar

   R_FOR
   R_SWITCH
   R_CASE
   R_BREAK
   R_CONTINUE


Grammar

    0 $accept: BEFORE_THE_BEGINNING $end

    1 BEFORE_THE_BEGINNING: CMDS

    2 BLOCK: START_SCOPE BLOCK_INIT CMDS BLOCK_END END_SCOPE

    3 START_SCOPE: %empty

    4 END_SCOPE: %empty

    5 CMDS: CMD CMDS
    6     | %empty

    7 WHILE: R_WHILE EXP BLOCK

    8 DO: R_DO BLOCK R_WHILE EXP

    9 IF: R_IF EXP BLOCK ELSE

   10 ELSE: R_ELSE ELSEIF
   11     | %empty

   12 ELSEIF: IF
   13       | BLOCK

   14 CMD: IF
   15    | WHILE
   16    | DO
   17    | END_LINE
   18    | IS
   19    | IN
   20    | OUT
   21    | IS SEMI_COLON
   22    | IN SEMI_COLON
   23    | OUT SEMI_COLON
   24    | EXP
   25    | EXP SEMI_COLON

   26 IS: varConst R_IS TYPE

   27 TYPE: INTEGER
   28     | FLOAT
   29     | BOOLEAN
   30     | CHARACTER
   31     | STRING

   32 IN: R_IN COLON varConst

   33 OUT: R_OUT COLON EXP COMMA_OUT

   34 COMMA_OUT: COMMA EXP COMMA_OUT
   35          | %empty

   36 EXP: EXP R_DOT EXP
   37    | EXP COLON COLON EXPLICIT_TYPE
   38    | EXP BOOLEAN_LOGIC EXP
   39    | NOT EXP
   40    | EXP QUESTION EXP COLON EXP
   41    | EXP EQUALITY_TEST EXP
   42    | EXP ORDER_RELATION EXP
   43    | varConst ASSIGNMENT EXP
   44    | EXP ARITHMETIC_1 EXP
   45    | EXP ARITHMETIC_2 EXP
   46    | '(' EXP ')'
   47    | VAR
   48    | CONST
   49    | INTEGER
   50    | FLOAT
   51    | BOOLEAN
   52    | CHARACTER
   53    | STRING

   54 varConst: VAR
   55         | CONST


Terminals, with rules where they appear

$end (0) 0
'(' (40) 46
')' (41) 46
error (256)
BLOCK_INIT (258) 2
BLOCK_END (259) 2
SEMI_COLON (260) 21 22 23 25
R_IF (261) 9
R_ELSE (262) 10
R_WHILE (263) 7 8
R_DO (264) 8
R_FOR (265)
R_SWITCH (266)
R_CASE (267)
R_BREAK (268)
R_CONTINUE (269)
R_IN (270) 32
R_OUT (271) 33
R_IS (272) 26
R_DOT (273) 36
INTEGER (274) 27 49
FLOAT (275) 28 50
BOOLEAN (276) 29 51
CHARACTER (277) 30 52
STRING (278) 31 53
ARITHMETIC_1 (279) 44
ARITHMETIC_2 (280) 45
BOOLEAN_LOGIC (281) 38
EQUALITY_TEST (282) 41
ORDER_RELATION (283) 42
ASSIGNMENT (284) 43
NOT (285) 39
COLON (286) 32 33 37 40
QUESTION (287) 40
COMMA (288) 34
VAR (289) 47 54
CONST (290) 48 55
EXPLICIT_TYPE (291) 37
END_LINE (292) 17


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
BEFORE_THE_BEGINNING (41)
    on left: 1, on right: 0
BLOCK (42)
    on left: 2, on right: 7 8 9 13
START_SCOPE (43)
    on left: 3, on right: 2
END_SCOPE (44)
    on left: 4, on right: 2
CMDS (45)
    on left: 5 6, on right: 1 2 5
WHILE (46)
    on left: 7, on right: 15
DO (47)
    on left: 8, on right: 16
IF (48)
    on left: 9, on right: 12 14
ELSE (49)
    on left: 10 11, on right: 9
ELSEIF (50)
    on left: 12 13, on right: 10
CMD (51)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25, on right: 5
IS (52)
    on left: 26, on right: 18 21
TYPE (53)
    on left: 27 28 29 30 31, on right: 26
IN (54)
    on left: 32, on right: 19 22
OUT (55)
    on left: 33, on right: 20 23
COMMA_OUT (56)
    on left: 34 35, on right: 33 34
EXP (57)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53,
    on right: 7 8 9 24 25 33 34 36 37 38 39 40 41 42 43 44 45 46
varConst (58)
    on left: 54 55, on right: 26 32 43


State 0

    0 $accept: . BEFORE_THE_BEGINNING $end

    R_IF       shift, and go to state 1
    R_WHILE    shift, and go to state 2
    R_DO       shift, and go to state 3
    R_IN       shift, and go to state 4
    R_OUT      shift, and go to state 5
    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    END_LINE   shift, and go to state 14
    '('        shift, and go to state 15

    $default  reduce using rule 6 (CMDS)

    BEFORE_THE_BEGINNING  go to state 16
    CMDS                  go to state 17
    WHILE                 go to state 18
    DO                    go to state 19
    IF                    go to state 20
    CMD                   go to state 21
    IS                    go to state 22
    IN                    go to state 23
    OUT                   go to state 24
    EXP                   go to state 25
    varConst              go to state 26


State 1

    9 IF: R_IF . EXP BLOCK ELSE

    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    '('        shift, and go to state 15

    EXP       go to state 27
    varConst  go to state 28


State 2

    7 WHILE: R_WHILE . EXP BLOCK

    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    '('        shift, and go to state 15

    EXP       go to state 29
    varConst  go to state 28


State 3

    8 DO: R_DO . BLOCK R_WHILE EXP

    $default  reduce using rule 3 (START_SCOPE)

    BLOCK        go to state 30
    START_SCOPE  go to state 31


State 4

   32 IN: R_IN . COLON varConst

    COLON  shift, and go to state 32


State 5

   33 OUT: R_OUT . COLON EXP COMMA_OUT

    COLON  shift, and go to state 33


State 6

   49 EXP: INTEGER .

    $default  reduce using rule 49 (EXP)


State 7

   50 EXP: FLOAT .

    $default  reduce using rule 50 (EXP)


State 8

   51 EXP: BOOLEAN .

    $default  reduce using rule 51 (EXP)


State 9

   52 EXP: CHARACTER .

    $default  reduce using rule 52 (EXP)


State 10

   53 EXP: STRING .

    $default  reduce using rule 53 (EXP)


State 11

   39 EXP: NOT . EXP

    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    '('        shift, and go to state 15

    EXP       go to state 34
    varConst  go to state 28


State 12

   47 EXP: VAR .
   54 varConst: VAR .

    R_IS        reduce using rule 54 (varConst)
    ASSIGNMENT  reduce using rule 54 (varConst)
    $default    reduce using rule 47 (EXP)


State 13

   48 EXP: CONST .
   55 varConst: CONST .

    R_IS        reduce using rule 55 (varConst)
    ASSIGNMENT  reduce using rule 55 (varConst)
    $default    reduce using rule 48 (EXP)


State 14

   17 CMD: END_LINE .

    $default  reduce using rule 17 (CMD)


State 15

   46 EXP: '(' . EXP ')'

    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    '('        shift, and go to state 15

    EXP       go to state 35
    varConst  go to state 28


State 16

    0 $accept: BEFORE_THE_BEGINNING . $end

    $end  shift, and go to state 36


State 17

    1 BEFORE_THE_BEGINNING: CMDS .

    $default  reduce using rule 1 (BEFORE_THE_BEGINNING)


State 18

   15 CMD: WHILE .

    $default  reduce using rule 15 (CMD)


State 19

   16 CMD: DO .

    $default  reduce using rule 16 (CMD)


State 20

   14 CMD: IF .

    $default  reduce using rule 14 (CMD)


State 21

    5 CMDS: CMD . CMDS

    R_IF       shift, and go to state 1
    R_WHILE    shift, and go to state 2
    R_DO       shift, and go to state 3
    R_IN       shift, and go to state 4
    R_OUT      shift, and go to state 5
    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    END_LINE   shift, and go to state 14
    '('        shift, and go to state 15

    $default  reduce using rule 6 (CMDS)

    CMDS      go to state 37
    WHILE     go to state 18
    DO        go to state 19
    IF        go to state 20
    CMD       go to state 21
    IS        go to state 22
    IN        go to state 23
    OUT       go to state 24
    EXP       go to state 25
    varConst  go to state 26


State 22

   18 CMD: IS .
   21    | IS . SEMI_COLON

    SEMI_COLON  shift, and go to state 38

    $default  reduce using rule 18 (CMD)


State 23

   19 CMD: IN .
   22    | IN . SEMI_COLON

    SEMI_COLON  shift, and go to state 39

    $default  reduce using rule 19 (CMD)


State 24

   20 CMD: OUT .
   23    | OUT . SEMI_COLON

    SEMI_COLON  shift, and go to state 40

    $default  reduce using rule 20 (CMD)


State 25

   24 CMD: EXP .
   25    | EXP . SEMI_COLON
   36 EXP: EXP . R_DOT EXP
   37    | EXP . COLON COLON EXPLICIT_TYPE
   38    | EXP . BOOLEAN_LOGIC EXP
   40    | EXP . QUESTION EXP COLON EXP
   41    | EXP . EQUALITY_TEST EXP
   42    | EXP . ORDER_RELATION EXP
   44    | EXP . ARITHMETIC_1 EXP
   45    | EXP . ARITHMETIC_2 EXP

    SEMI_COLON      shift, and go to state 41
    R_DOT           shift, and go to state 42
    ARITHMETIC_1    shift, and go to state 43
    ARITHMETIC_2    shift, and go to state 44
    BOOLEAN_LOGIC   shift, and go to state 45
    EQUALITY_TEST   shift, and go to state 46
    ORDER_RELATION  shift, and go to state 47
    COLON           shift, and go to state 48
    QUESTION        shift, and go to state 49

    $default  reduce using rule 24 (CMD)


State 26

   26 IS: varConst . R_IS TYPE
   43 EXP: varConst . ASSIGNMENT EXP

    R_IS        shift, and go to state 50
    ASSIGNMENT  shift, and go to state 51


State 27

    9 IF: R_IF EXP . BLOCK ELSE
   36 EXP: EXP . R_DOT EXP
   37    | EXP . COLON COLON EXPLICIT_TYPE
   38    | EXP . BOOLEAN_LOGIC EXP
   40    | EXP . QUESTION EXP COLON EXP
   41    | EXP . EQUALITY_TEST EXP
   42    | EXP . ORDER_RELATION EXP
   44    | EXP . ARITHMETIC_1 EXP
   45    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 42
    ARITHMETIC_1    shift, and go to state 43
    ARITHMETIC_2    shift, and go to state 44
    BOOLEAN_LOGIC   shift, and go to state 45
    EQUALITY_TEST   shift, and go to state 46
    ORDER_RELATION  shift, and go to state 47
    COLON           shift, and go to state 48
    QUESTION        shift, and go to state 49

    $default  reduce using rule 3 (START_SCOPE)

    BLOCK        go to state 52
    START_SCOPE  go to state 31


State 28

   43 EXP: varConst . ASSIGNMENT EXP

    ASSIGNMENT  shift, and go to state 51


State 29

    7 WHILE: R_WHILE EXP . BLOCK
   36 EXP: EXP . R_DOT EXP
   37    | EXP . COLON COLON EXPLICIT_TYPE
   38    | EXP . BOOLEAN_LOGIC EXP
   40    | EXP . QUESTION EXP COLON EXP
   41    | EXP . EQUALITY_TEST EXP
   42    | EXP . ORDER_RELATION EXP
   44    | EXP . ARITHMETIC_1 EXP
   45    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 42
    ARITHMETIC_1    shift, and go to state 43
    ARITHMETIC_2    shift, and go to state 44
    BOOLEAN_LOGIC   shift, and go to state 45
    EQUALITY_TEST   shift, and go to state 46
    ORDER_RELATION  shift, and go to state 47
    COLON           shift, and go to state 48
    QUESTION        shift, and go to state 49

    $default  reduce using rule 3 (START_SCOPE)

    BLOCK        go to state 53
    START_SCOPE  go to state 31


State 30

    8 DO: R_DO BLOCK . R_WHILE EXP

    R_WHILE  shift, and go to state 54


State 31

    2 BLOCK: START_SCOPE . BLOCK_INIT CMDS BLOCK_END END_SCOPE

    BLOCK_INIT  shift, and go to state 55


State 32

   32 IN: R_IN COLON . varConst

    VAR    shift, and go to state 56
    CONST  shift, and go to state 57

    varConst  go to state 58


State 33

   33 OUT: R_OUT COLON . EXP COMMA_OUT

    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    '('        shift, and go to state 15

    EXP       go to state 59
    varConst  go to state 28


State 34

   36 EXP: EXP . R_DOT EXP
   37    | EXP . COLON COLON EXPLICIT_TYPE
   38    | EXP . BOOLEAN_LOGIC EXP
   39    | NOT EXP .
   40    | EXP . QUESTION EXP COLON EXP
   41    | EXP . EQUALITY_TEST EXP
   42    | EXP . ORDER_RELATION EXP
   44    | EXP . ARITHMETIC_1 EXP
   45    | EXP . ARITHMETIC_2 EXP

    R_DOT         shift, and go to state 42
    ARITHMETIC_1  shift, and go to state 43
    ARITHMETIC_2  shift, and go to state 44

    $default  reduce using rule 39 (EXP)


State 35

   36 EXP: EXP . R_DOT EXP
   37    | EXP . COLON COLON EXPLICIT_TYPE
   38    | EXP . BOOLEAN_LOGIC EXP
   40    | EXP . QUESTION EXP COLON EXP
   41    | EXP . EQUALITY_TEST EXP
   42    | EXP . ORDER_RELATION EXP
   44    | EXP . ARITHMETIC_1 EXP
   45    | EXP . ARITHMETIC_2 EXP
   46    | '(' EXP . ')'

    R_DOT           shift, and go to state 42
    ARITHMETIC_1    shift, and go to state 43
    ARITHMETIC_2    shift, and go to state 44
    BOOLEAN_LOGIC   shift, and go to state 45
    EQUALITY_TEST   shift, and go to state 46
    ORDER_RELATION  shift, and go to state 47
    COLON           shift, and go to state 48
    QUESTION        shift, and go to state 49
    ')'             shift, and go to state 60


State 36

    0 $accept: BEFORE_THE_BEGINNING $end .

    $default  accept


State 37

    5 CMDS: CMD CMDS .

    $default  reduce using rule 5 (CMDS)


State 38

   21 CMD: IS SEMI_COLON .

    $default  reduce using rule 21 (CMD)


State 39

   22 CMD: IN SEMI_COLON .

    $default  reduce using rule 22 (CMD)


State 40

   23 CMD: OUT SEMI_COLON .

    $default  reduce using rule 23 (CMD)


State 41

   25 CMD: EXP SEMI_COLON .

    $default  reduce using rule 25 (CMD)


State 42

   36 EXP: EXP R_DOT . EXP

    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    '('        shift, and go to state 15

    EXP       go to state 61
    varConst  go to state 28


State 43

   44 EXP: EXP ARITHMETIC_1 . EXP

    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    '('        shift, and go to state 15

    EXP       go to state 62
    varConst  go to state 28


State 44

   45 EXP: EXP ARITHMETIC_2 . EXP

    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    '('        shift, and go to state 15

    EXP       go to state 63
    varConst  go to state 28


State 45

   38 EXP: EXP BOOLEAN_LOGIC . EXP

    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    '('        shift, and go to state 15

    EXP       go to state 64
    varConst  go to state 28


State 46

   41 EXP: EXP EQUALITY_TEST . EXP

    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    '('        shift, and go to state 15

    EXP       go to state 65
    varConst  go to state 28


State 47

   42 EXP: EXP ORDER_RELATION . EXP

    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    '('        shift, and go to state 15

    EXP       go to state 66
    varConst  go to state 28


State 48

   37 EXP: EXP COLON . COLON EXPLICIT_TYPE

    COLON  shift, and go to state 67


State 49

   40 EXP: EXP QUESTION . EXP COLON EXP

    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    '('        shift, and go to state 15

    EXP       go to state 68
    varConst  go to state 28


State 50

   26 IS: varConst R_IS . TYPE

    INTEGER    shift, and go to state 69
    FLOAT      shift, and go to state 70
    BOOLEAN    shift, and go to state 71
    CHARACTER  shift, and go to state 72
    STRING     shift, and go to state 73

    TYPE  go to state 74


State 51

   43 EXP: varConst ASSIGNMENT . EXP

    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    '('        shift, and go to state 15

    EXP       go to state 75
    varConst  go to state 28


State 52

    9 IF: R_IF EXP BLOCK . ELSE

    R_ELSE  shift, and go to state 76

    $default  reduce using rule 11 (ELSE)

    ELSE  go to state 77


State 53

    7 WHILE: R_WHILE EXP BLOCK .

    $default  reduce using rule 7 (WHILE)


State 54

    8 DO: R_DO BLOCK R_WHILE . EXP

    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    '('        shift, and go to state 15

    EXP       go to state 78
    varConst  go to state 28


State 55

    2 BLOCK: START_SCOPE BLOCK_INIT . CMDS BLOCK_END END_SCOPE

    R_IF       shift, and go to state 1
    R_WHILE    shift, and go to state 2
    R_DO       shift, and go to state 3
    R_IN       shift, and go to state 4
    R_OUT      shift, and go to state 5
    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    END_LINE   shift, and go to state 14
    '('        shift, and go to state 15

    $default  reduce using rule 6 (CMDS)

    CMDS      go to state 79
    WHILE     go to state 18
    DO        go to state 19
    IF        go to state 20
    CMD       go to state 21
    IS        go to state 22
    IN        go to state 23
    OUT       go to state 24
    EXP       go to state 25
    varConst  go to state 26


State 56

   54 varConst: VAR .

    $default  reduce using rule 54 (varConst)


State 57

   55 varConst: CONST .

    $default  reduce using rule 55 (varConst)


State 58

   32 IN: R_IN COLON varConst .

    $default  reduce using rule 32 (IN)


State 59

   33 OUT: R_OUT COLON EXP . COMMA_OUT
   36 EXP: EXP . R_DOT EXP
   37    | EXP . COLON COLON EXPLICIT_TYPE
   38    | EXP . BOOLEAN_LOGIC EXP
   40    | EXP . QUESTION EXP COLON EXP
   41    | EXP . EQUALITY_TEST EXP
   42    | EXP . ORDER_RELATION EXP
   44    | EXP . ARITHMETIC_1 EXP
   45    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 42
    ARITHMETIC_1    shift, and go to state 43
    ARITHMETIC_2    shift, and go to state 44
    BOOLEAN_LOGIC   shift, and go to state 45
    EQUALITY_TEST   shift, and go to state 46
    ORDER_RELATION  shift, and go to state 47
    COLON           shift, and go to state 48
    QUESTION        shift, and go to state 49
    COMMA           shift, and go to state 80

    $default  reduce using rule 35 (COMMA_OUT)

    COMMA_OUT  go to state 81


State 60

   46 EXP: '(' EXP ')' .

    $default  reduce using rule 46 (EXP)


State 61

   36 EXP: EXP . R_DOT EXP
   36    | EXP R_DOT EXP .
   37    | EXP . COLON COLON EXPLICIT_TYPE
   38    | EXP . BOOLEAN_LOGIC EXP
   40    | EXP . QUESTION EXP COLON EXP
   41    | EXP . EQUALITY_TEST EXP
   42    | EXP . ORDER_RELATION EXP
   44    | EXP . ARITHMETIC_1 EXP
   45    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 43
    ARITHMETIC_2  shift, and go to state 44

    $default  reduce using rule 36 (EXP)


State 62

   36 EXP: EXP . R_DOT EXP
   37    | EXP . COLON COLON EXPLICIT_TYPE
   38    | EXP . BOOLEAN_LOGIC EXP
   40    | EXP . QUESTION EXP COLON EXP
   41    | EXP . EQUALITY_TEST EXP
   42    | EXP . ORDER_RELATION EXP
   44    | EXP . ARITHMETIC_1 EXP
   44    | EXP ARITHMETIC_1 EXP .
   45    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_2  shift, and go to state 44

    $default  reduce using rule 44 (EXP)


State 63

   36 EXP: EXP . R_DOT EXP
   37    | EXP . COLON COLON EXPLICIT_TYPE
   38    | EXP . BOOLEAN_LOGIC EXP
   40    | EXP . QUESTION EXP COLON EXP
   41    | EXP . EQUALITY_TEST EXP
   42    | EXP . ORDER_RELATION EXP
   44    | EXP . ARITHMETIC_1 EXP
   45    | EXP . ARITHMETIC_2 EXP
   45    | EXP ARITHMETIC_2 EXP .

    $default  reduce using rule 45 (EXP)


State 64

   36 EXP: EXP . R_DOT EXP
   37    | EXP . COLON COLON EXPLICIT_TYPE
   38    | EXP . BOOLEAN_LOGIC EXP
   38    | EXP BOOLEAN_LOGIC EXP .
   40    | EXP . QUESTION EXP COLON EXP
   41    | EXP . EQUALITY_TEST EXP
   42    | EXP . ORDER_RELATION EXP
   44    | EXP . ARITHMETIC_1 EXP
   45    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 42
    ARITHMETIC_1    shift, and go to state 43
    ARITHMETIC_2    shift, and go to state 44
    EQUALITY_TEST   shift, and go to state 46
    ORDER_RELATION  shift, and go to state 47
    COLON           shift, and go to state 48
    QUESTION        shift, and go to state 49

    $default  reduce using rule 38 (EXP)


State 65

   36 EXP: EXP . R_DOT EXP
   37    | EXP . COLON COLON EXPLICIT_TYPE
   38    | EXP . BOOLEAN_LOGIC EXP
   40    | EXP . QUESTION EXP COLON EXP
   41    | EXP . EQUALITY_TEST EXP
   41    | EXP EQUALITY_TEST EXP .
   42    | EXP . ORDER_RELATION EXP
   44    | EXP . ARITHMETIC_1 EXP
   45    | EXP . ARITHMETIC_2 EXP

    R_DOT         shift, and go to state 42
    ARITHMETIC_1  shift, and go to state 43
    ARITHMETIC_2  shift, and go to state 44
    COLON         shift, and go to state 48
    QUESTION      shift, and go to state 49

    $default  reduce using rule 41 (EXP)


State 66

   36 EXP: EXP . R_DOT EXP
   37    | EXP . COLON COLON EXPLICIT_TYPE
   38    | EXP . BOOLEAN_LOGIC EXP
   40    | EXP . QUESTION EXP COLON EXP
   41    | EXP . EQUALITY_TEST EXP
   42    | EXP . ORDER_RELATION EXP
   42    | EXP ORDER_RELATION EXP .
   44    | EXP . ARITHMETIC_1 EXP
   45    | EXP . ARITHMETIC_2 EXP

    R_DOT         shift, and go to state 42
    ARITHMETIC_1  shift, and go to state 43
    ARITHMETIC_2  shift, and go to state 44
    COLON         shift, and go to state 48
    QUESTION      shift, and go to state 49

    $default  reduce using rule 42 (EXP)


State 67

   37 EXP: EXP COLON COLON . EXPLICIT_TYPE

    EXPLICIT_TYPE  shift, and go to state 82


State 68

   36 EXP: EXP . R_DOT EXP
   37    | EXP . COLON COLON EXPLICIT_TYPE
   38    | EXP . BOOLEAN_LOGIC EXP
   40    | EXP . QUESTION EXP COLON EXP
   40    | EXP QUESTION EXP . COLON EXP
   41    | EXP . EQUALITY_TEST EXP
   42    | EXP . ORDER_RELATION EXP
   44    | EXP . ARITHMETIC_1 EXP
   45    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 42
    ARITHMETIC_1    shift, and go to state 43
    ARITHMETIC_2    shift, and go to state 44
    BOOLEAN_LOGIC   shift, and go to state 45
    EQUALITY_TEST   shift, and go to state 46
    ORDER_RELATION  shift, and go to state 47
    COLON           shift, and go to state 83
    QUESTION        shift, and go to state 49


State 69

   27 TYPE: INTEGER .

    $default  reduce using rule 27 (TYPE)


State 70

   28 TYPE: FLOAT .

    $default  reduce using rule 28 (TYPE)


State 71

   29 TYPE: BOOLEAN .

    $default  reduce using rule 29 (TYPE)


State 72

   30 TYPE: CHARACTER .

    $default  reduce using rule 30 (TYPE)


State 73

   31 TYPE: STRING .

    $default  reduce using rule 31 (TYPE)


State 74

   26 IS: varConst R_IS TYPE .

    $default  reduce using rule 26 (IS)


State 75

   36 EXP: EXP . R_DOT EXP
   37    | EXP . COLON COLON EXPLICIT_TYPE
   38    | EXP . BOOLEAN_LOGIC EXP
   40    | EXP . QUESTION EXP COLON EXP
   41    | EXP . EQUALITY_TEST EXP
   42    | EXP . ORDER_RELATION EXP
   43    | varConst ASSIGNMENT EXP .
   44    | EXP . ARITHMETIC_1 EXP
   45    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 42
    ARITHMETIC_1    shift, and go to state 43
    ARITHMETIC_2    shift, and go to state 44
    BOOLEAN_LOGIC   shift, and go to state 45
    EQUALITY_TEST   shift, and go to state 46
    ORDER_RELATION  shift, and go to state 47
    COLON           shift, and go to state 48
    QUESTION        shift, and go to state 49

    $default  reduce using rule 43 (EXP)


State 76

   10 ELSE: R_ELSE . ELSEIF

    R_IF  shift, and go to state 1

    $default  reduce using rule 3 (START_SCOPE)

    BLOCK        go to state 84
    START_SCOPE  go to state 31
    IF           go to state 85
    ELSEIF       go to state 86


State 77

    9 IF: R_IF EXP BLOCK ELSE .

    $default  reduce using rule 9 (IF)


State 78

    8 DO: R_DO BLOCK R_WHILE EXP .
   36 EXP: EXP . R_DOT EXP
   37    | EXP . COLON COLON EXPLICIT_TYPE
   38    | EXP . BOOLEAN_LOGIC EXP
   40    | EXP . QUESTION EXP COLON EXP
   41    | EXP . EQUALITY_TEST EXP
   42    | EXP . ORDER_RELATION EXP
   44    | EXP . ARITHMETIC_1 EXP
   45    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 42
    ARITHMETIC_1    shift, and go to state 43
    ARITHMETIC_2    shift, and go to state 44
    BOOLEAN_LOGIC   shift, and go to state 45
    EQUALITY_TEST   shift, and go to state 46
    ORDER_RELATION  shift, and go to state 47
    COLON           shift, and go to state 48
    QUESTION        shift, and go to state 49

    $default  reduce using rule 8 (DO)


State 79

    2 BLOCK: START_SCOPE BLOCK_INIT CMDS . BLOCK_END END_SCOPE

    BLOCK_END  shift, and go to state 87


State 80

   34 COMMA_OUT: COMMA . EXP COMMA_OUT

    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    '('        shift, and go to state 15

    EXP       go to state 88
    varConst  go to state 28


State 81

   33 OUT: R_OUT COLON EXP COMMA_OUT .

    $default  reduce using rule 33 (OUT)


State 82

   37 EXP: EXP COLON COLON EXPLICIT_TYPE .

    $default  reduce using rule 37 (EXP)


State 83

   37 EXP: EXP COLON . COLON EXPLICIT_TYPE
   40    | EXP QUESTION EXP COLON . EXP

    INTEGER    shift, and go to state 6
    FLOAT      shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    STRING     shift, and go to state 10
    NOT        shift, and go to state 11
    COLON      shift, and go to state 67
    VAR        shift, and go to state 12
    CONST      shift, and go to state 13
    '('        shift, and go to state 15

    EXP       go to state 89
    varConst  go to state 28


State 84

   13 ELSEIF: BLOCK .

    $default  reduce using rule 13 (ELSEIF)


State 85

   12 ELSEIF: IF .

    $default  reduce using rule 12 (ELSEIF)


State 86

   10 ELSE: R_ELSE ELSEIF .

    $default  reduce using rule 10 (ELSE)


State 87

    2 BLOCK: START_SCOPE BLOCK_INIT CMDS BLOCK_END . END_SCOPE

    $default  reduce using rule 4 (END_SCOPE)

    END_SCOPE  go to state 90


State 88

   34 COMMA_OUT: COMMA EXP . COMMA_OUT
   36 EXP: EXP . R_DOT EXP
   37    | EXP . COLON COLON EXPLICIT_TYPE
   38    | EXP . BOOLEAN_LOGIC EXP
   40    | EXP . QUESTION EXP COLON EXP
   41    | EXP . EQUALITY_TEST EXP
   42    | EXP . ORDER_RELATION EXP
   44    | EXP . ARITHMETIC_1 EXP
   45    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 42
    ARITHMETIC_1    shift, and go to state 43
    ARITHMETIC_2    shift, and go to state 44
    BOOLEAN_LOGIC   shift, and go to state 45
    EQUALITY_TEST   shift, and go to state 46
    ORDER_RELATION  shift, and go to state 47
    COLON           shift, and go to state 48
    QUESTION        shift, and go to state 49
    COMMA           shift, and go to state 80

    $default  reduce using rule 35 (COMMA_OUT)

    COMMA_OUT  go to state 91


State 89

   36 EXP: EXP . R_DOT EXP
   37    | EXP . COLON COLON EXPLICIT_TYPE
   38    | EXP . BOOLEAN_LOGIC EXP
   40    | EXP . QUESTION EXP COLON EXP
   40    | EXP QUESTION EXP COLON EXP .
   41    | EXP . EQUALITY_TEST EXP
   42    | EXP . ORDER_RELATION EXP
   44    | EXP . ARITHMETIC_1 EXP
   45    | EXP . ARITHMETIC_2 EXP

    R_DOT         shift, and go to state 42
    ARITHMETIC_1  shift, and go to state 43
    ARITHMETIC_2  shift, and go to state 44

    $default  reduce using rule 40 (EXP)


State 90

    2 BLOCK: START_SCOPE BLOCK_INIT CMDS BLOCK_END END_SCOPE .

    $default  reduce using rule 2 (BLOCK)


State 91

   34 COMMA_OUT: COMMA EXP COMMA_OUT .

    $default  reduce using rule 34 (COMMA_OUT)
