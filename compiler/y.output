Terminals unused in grammar

   R_IF
   R_ELSE
   R_WHILE
   R_DO
   R_FOR
   R_SWITCH
   R_CASE
   R_BREAK
   R_CONTINUE


Grammar

    0 $accept: BEFORE_THE_BEGINNING $end

    1 BEFORE_THE_BEGINNING: CMDS

    2 BLOCK: BLOCK_INIT CMDS BLOCK_END

    3 CMDS: CMD CMDS
    4     | %empty

    5 CMD: BLOCK
    6    | END_LINE
    7    | IS
    8    | IN
    9    | OUT
   10    | IS SEMI_COLON
   11    | IN SEMI_COLON
   12    | OUT SEMI_COLON
   13    | EXP
   14    | EXP SEMI_COLON

   15 IS: varConst R_IS TYPE

   16 TYPE: INTEGER
   17     | FLOAT
   18     | BOOLEAN
   19     | CHARACTER
   20     | STRING

   21 IN: R_IN COLON varConst

   22 OUT: R_OUT COLON EXP COMMA_OUT

   23 COMMA_OUT: COMMA EXP COMMA_OUT
   24          | %empty

   25 EXP: EXP COLON COLON EXPLICIT_TYPE
   26    | EXP BOOLEAN_LOGIC EXP
   27    | NOT EXP
   28    | EXP QUESTION EXP COLON EXP
   29    | EXP EQUALITY_TEST EXP
   30    | EXP ORDER_RELATION EXP
   31    | varConst ASSIGNMENT EXP
   32    | EXP ARITHMETIC_1 EXP
   33    | EXP ARITHMETIC_2 EXP
   34    | '(' EXP ')'
   35    | VAR
   36    | CONST
   37    | INTEGER
   38    | FLOAT
   39    | BOOLEAN
   40    | CHARACTER
   41    | STRING

   42 varConst: VAR
   43         | CONST


Terminals, with rules where they appear

$end (0) 0
'(' (40) 34
')' (41) 34
error (256)
BLOCK_INIT (258) 2
BLOCK_END (259) 2
SEMI_COLON (260) 10 11 12 14
R_IF (261)
R_ELSE (262)
R_WHILE (263)
R_DO (264)
R_FOR (265)
R_SWITCH (266)
R_CASE (267)
R_BREAK (268)
R_CONTINUE (269)
R_IN (270) 21
R_OUT (271) 22
R_IS (272) 15
INTEGER (273) 16 37
FLOAT (274) 17 38
BOOLEAN (275) 18 39
CHARACTER (276) 19 40
STRING (277) 20 41
ARITHMETIC_1 (278) 32
ARITHMETIC_2 (279) 33
BOOLEAN_LOGIC (280) 26
EQUALITY_TEST (281) 29
ORDER_RELATION (282) 30
ASSIGNMENT (283) 31
NOT (284) 27
COLON (285) 21 22 25 28
QUESTION (286) 28
COMMA (287) 23
VAR (288) 35 42
CONST (289) 36 43
EXPLICIT_TYPE (290) 25
END_LINE (291) 6


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
BEFORE_THE_BEGINNING (40)
    on left: 1, on right: 0
BLOCK (41)
    on left: 2, on right: 5
CMDS (42)
    on left: 3 4, on right: 1 2 3
CMD (43)
    on left: 5 6 7 8 9 10 11 12 13 14, on right: 3
IS (44)
    on left: 15, on right: 7 10
TYPE (45)
    on left: 16 17 18 19 20, on right: 15
IN (46)
    on left: 21, on right: 8 11
OUT (47)
    on left: 22, on right: 9 12
COMMA_OUT (48)
    on left: 23 24, on right: 22 23
EXP (49)
    on left: 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41, on right:
    13 14 22 23 25 26 27 28 29 30 31 32 33 34
varConst (50)
    on left: 42 43, on right: 15 21 31


State 0

    0 $accept: . BEFORE_THE_BEGINNING $end

    BLOCK_INIT  shift, and go to state 1
    R_IN        shift, and go to state 2
    R_OUT       shift, and go to state 3
    INTEGER     shift, and go to state 4
    FLOAT       shift, and go to state 5
    BOOLEAN     shift, and go to state 6
    CHARACTER   shift, and go to state 7
    STRING      shift, and go to state 8
    NOT         shift, and go to state 9
    VAR         shift, and go to state 10
    CONST       shift, and go to state 11
    END_LINE    shift, and go to state 12
    '('         shift, and go to state 13

    $default  reduce using rule 4 (CMDS)

    BEFORE_THE_BEGINNING  go to state 14
    BLOCK                 go to state 15
    CMDS                  go to state 16
    CMD                   go to state 17
    IS                    go to state 18
    IN                    go to state 19
    OUT                   go to state 20
    EXP                   go to state 21
    varConst              go to state 22


State 1

    2 BLOCK: BLOCK_INIT . CMDS BLOCK_END

    BLOCK_INIT  shift, and go to state 1
    R_IN        shift, and go to state 2
    R_OUT       shift, and go to state 3
    INTEGER     shift, and go to state 4
    FLOAT       shift, and go to state 5
    BOOLEAN     shift, and go to state 6
    CHARACTER   shift, and go to state 7
    STRING      shift, and go to state 8
    NOT         shift, and go to state 9
    VAR         shift, and go to state 10
    CONST       shift, and go to state 11
    END_LINE    shift, and go to state 12
    '('         shift, and go to state 13

    $default  reduce using rule 4 (CMDS)

    BLOCK     go to state 15
    CMDS      go to state 23
    CMD       go to state 17
    IS        go to state 18
    IN        go to state 19
    OUT       go to state 20
    EXP       go to state 21
    varConst  go to state 22


State 2

   21 IN: R_IN . COLON varConst

    COLON  shift, and go to state 24


State 3

   22 OUT: R_OUT . COLON EXP COMMA_OUT

    COLON  shift, and go to state 25


State 4

   37 EXP: INTEGER .

    $default  reduce using rule 37 (EXP)


State 5

   38 EXP: FLOAT .

    $default  reduce using rule 38 (EXP)


State 6

   39 EXP: BOOLEAN .

    $default  reduce using rule 39 (EXP)


State 7

   40 EXP: CHARACTER .

    $default  reduce using rule 40 (EXP)


State 8

   41 EXP: STRING .

    $default  reduce using rule 41 (EXP)


State 9

   27 EXP: NOT . EXP

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 26
    varConst  go to state 27


State 10

   35 EXP: VAR .
   42 varConst: VAR .

    R_IS        reduce using rule 42 (varConst)
    ASSIGNMENT  reduce using rule 42 (varConst)
    $default    reduce using rule 35 (EXP)


State 11

   36 EXP: CONST .
   43 varConst: CONST .

    R_IS        reduce using rule 43 (varConst)
    ASSIGNMENT  reduce using rule 43 (varConst)
    $default    reduce using rule 36 (EXP)


State 12

    6 CMD: END_LINE .

    $default  reduce using rule 6 (CMD)


State 13

   34 EXP: '(' . EXP ')'

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 28
    varConst  go to state 27


State 14

    0 $accept: BEFORE_THE_BEGINNING . $end

    $end  shift, and go to state 29


State 15

    5 CMD: BLOCK .

    $default  reduce using rule 5 (CMD)


State 16

    1 BEFORE_THE_BEGINNING: CMDS .

    $default  reduce using rule 1 (BEFORE_THE_BEGINNING)


State 17

    3 CMDS: CMD . CMDS

    BLOCK_INIT  shift, and go to state 1
    R_IN        shift, and go to state 2
    R_OUT       shift, and go to state 3
    INTEGER     shift, and go to state 4
    FLOAT       shift, and go to state 5
    BOOLEAN     shift, and go to state 6
    CHARACTER   shift, and go to state 7
    STRING      shift, and go to state 8
    NOT         shift, and go to state 9
    VAR         shift, and go to state 10
    CONST       shift, and go to state 11
    END_LINE    shift, and go to state 12
    '('         shift, and go to state 13

    $default  reduce using rule 4 (CMDS)

    BLOCK     go to state 15
    CMDS      go to state 30
    CMD       go to state 17
    IS        go to state 18
    IN        go to state 19
    OUT       go to state 20
    EXP       go to state 21
    varConst  go to state 22


State 18

    7 CMD: IS .
   10    | IS . SEMI_COLON

    SEMI_COLON  shift, and go to state 31

    $default  reduce using rule 7 (CMD)


State 19

    8 CMD: IN .
   11    | IN . SEMI_COLON

    SEMI_COLON  shift, and go to state 32

    $default  reduce using rule 8 (CMD)


State 20

    9 CMD: OUT .
   12    | OUT . SEMI_COLON

    SEMI_COLON  shift, and go to state 33

    $default  reduce using rule 9 (CMD)


State 21

   13 CMD: EXP .
   14    | EXP . SEMI_COLON
   25 EXP: EXP . COLON COLON EXPLICIT_TYPE
   26    | EXP . BOOLEAN_LOGIC EXP
   28    | EXP . QUESTION EXP COLON EXP
   29    | EXP . EQUALITY_TEST EXP
   30    | EXP . ORDER_RELATION EXP
   32    | EXP . ARITHMETIC_1 EXP
   33    | EXP . ARITHMETIC_2 EXP

    SEMI_COLON      shift, and go to state 34
    ARITHMETIC_1    shift, and go to state 35
    ARITHMETIC_2    shift, and go to state 36
    BOOLEAN_LOGIC   shift, and go to state 37
    EQUALITY_TEST   shift, and go to state 38
    ORDER_RELATION  shift, and go to state 39
    COLON           shift, and go to state 40
    QUESTION        shift, and go to state 41

    $default  reduce using rule 13 (CMD)


State 22

   15 IS: varConst . R_IS TYPE
   31 EXP: varConst . ASSIGNMENT EXP

    R_IS        shift, and go to state 42
    ASSIGNMENT  shift, and go to state 43


State 23

    2 BLOCK: BLOCK_INIT CMDS . BLOCK_END

    BLOCK_END  shift, and go to state 44


State 24

   21 IN: R_IN COLON . varConst

    VAR    shift, and go to state 45
    CONST  shift, and go to state 46

    varConst  go to state 47


State 25

   22 OUT: R_OUT COLON . EXP COMMA_OUT

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 48
    varConst  go to state 27


State 26

   25 EXP: EXP . COLON COLON EXPLICIT_TYPE
   26    | EXP . BOOLEAN_LOGIC EXP
   27    | NOT EXP .
   28    | EXP . QUESTION EXP COLON EXP
   29    | EXP . EQUALITY_TEST EXP
   30    | EXP . ORDER_RELATION EXP
   32    | EXP . ARITHMETIC_1 EXP
   33    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 35
    ARITHMETIC_2  shift, and go to state 36

    $default  reduce using rule 27 (EXP)


State 27

   31 EXP: varConst . ASSIGNMENT EXP

    ASSIGNMENT  shift, and go to state 43


State 28

   25 EXP: EXP . COLON COLON EXPLICIT_TYPE
   26    | EXP . BOOLEAN_LOGIC EXP
   28    | EXP . QUESTION EXP COLON EXP
   29    | EXP . EQUALITY_TEST EXP
   30    | EXP . ORDER_RELATION EXP
   32    | EXP . ARITHMETIC_1 EXP
   33    | EXP . ARITHMETIC_2 EXP
   34    | '(' EXP . ')'

    ARITHMETIC_1    shift, and go to state 35
    ARITHMETIC_2    shift, and go to state 36
    BOOLEAN_LOGIC   shift, and go to state 37
    EQUALITY_TEST   shift, and go to state 38
    ORDER_RELATION  shift, and go to state 39
    COLON           shift, and go to state 40
    QUESTION        shift, and go to state 41
    ')'             shift, and go to state 49


State 29

    0 $accept: BEFORE_THE_BEGINNING $end .

    $default  accept


State 30

    3 CMDS: CMD CMDS .

    $default  reduce using rule 3 (CMDS)


State 31

   10 CMD: IS SEMI_COLON .

    $default  reduce using rule 10 (CMD)


State 32

   11 CMD: IN SEMI_COLON .

    $default  reduce using rule 11 (CMD)


State 33

   12 CMD: OUT SEMI_COLON .

    $default  reduce using rule 12 (CMD)


State 34

   14 CMD: EXP SEMI_COLON .

    $default  reduce using rule 14 (CMD)


State 35

   32 EXP: EXP ARITHMETIC_1 . EXP

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 50
    varConst  go to state 27


State 36

   33 EXP: EXP ARITHMETIC_2 . EXP

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 51
    varConst  go to state 27


State 37

   26 EXP: EXP BOOLEAN_LOGIC . EXP

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 52
    varConst  go to state 27


State 38

   29 EXP: EXP EQUALITY_TEST . EXP

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 53
    varConst  go to state 27


State 39

   30 EXP: EXP ORDER_RELATION . EXP

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 54
    varConst  go to state 27


State 40

   25 EXP: EXP COLON . COLON EXPLICIT_TYPE

    COLON  shift, and go to state 55


State 41

   28 EXP: EXP QUESTION . EXP COLON EXP

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 56
    varConst  go to state 27


State 42

   15 IS: varConst R_IS . TYPE

    INTEGER    shift, and go to state 57
    FLOAT      shift, and go to state 58
    BOOLEAN    shift, and go to state 59
    CHARACTER  shift, and go to state 60
    STRING     shift, and go to state 61

    TYPE  go to state 62


State 43

   31 EXP: varConst ASSIGNMENT . EXP

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 63
    varConst  go to state 27


State 44

    2 BLOCK: BLOCK_INIT CMDS BLOCK_END .

    $default  reduce using rule 2 (BLOCK)


State 45

   42 varConst: VAR .

    $default  reduce using rule 42 (varConst)


State 46

   43 varConst: CONST .

    $default  reduce using rule 43 (varConst)


State 47

   21 IN: R_IN COLON varConst .

    $default  reduce using rule 21 (IN)


State 48

   22 OUT: R_OUT COLON EXP . COMMA_OUT
   25 EXP: EXP . COLON COLON EXPLICIT_TYPE
   26    | EXP . BOOLEAN_LOGIC EXP
   28    | EXP . QUESTION EXP COLON EXP
   29    | EXP . EQUALITY_TEST EXP
   30    | EXP . ORDER_RELATION EXP
   32    | EXP . ARITHMETIC_1 EXP
   33    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 35
    ARITHMETIC_2    shift, and go to state 36
    BOOLEAN_LOGIC   shift, and go to state 37
    EQUALITY_TEST   shift, and go to state 38
    ORDER_RELATION  shift, and go to state 39
    COLON           shift, and go to state 40
    QUESTION        shift, and go to state 41
    COMMA           shift, and go to state 64

    $default  reduce using rule 24 (COMMA_OUT)

    COMMA_OUT  go to state 65


State 49

   34 EXP: '(' EXP ')' .

    $default  reduce using rule 34 (EXP)


State 50

   25 EXP: EXP . COLON COLON EXPLICIT_TYPE
   26    | EXP . BOOLEAN_LOGIC EXP
   28    | EXP . QUESTION EXP COLON EXP
   29    | EXP . EQUALITY_TEST EXP
   30    | EXP . ORDER_RELATION EXP
   32    | EXP . ARITHMETIC_1 EXP
   32    | EXP ARITHMETIC_1 EXP .
   33    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_2  shift, and go to state 36

    $default  reduce using rule 32 (EXP)


State 51

   25 EXP: EXP . COLON COLON EXPLICIT_TYPE
   26    | EXP . BOOLEAN_LOGIC EXP
   28    | EXP . QUESTION EXP COLON EXP
   29    | EXP . EQUALITY_TEST EXP
   30    | EXP . ORDER_RELATION EXP
   32    | EXP . ARITHMETIC_1 EXP
   33    | EXP . ARITHMETIC_2 EXP
   33    | EXP ARITHMETIC_2 EXP .

    $default  reduce using rule 33 (EXP)


State 52

   25 EXP: EXP . COLON COLON EXPLICIT_TYPE
   26    | EXP . BOOLEAN_LOGIC EXP
   26    | EXP BOOLEAN_LOGIC EXP .
   28    | EXP . QUESTION EXP COLON EXP
   29    | EXP . EQUALITY_TEST EXP
   30    | EXP . ORDER_RELATION EXP
   32    | EXP . ARITHMETIC_1 EXP
   33    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 35
    ARITHMETIC_2    shift, and go to state 36
    EQUALITY_TEST   shift, and go to state 38
    ORDER_RELATION  shift, and go to state 39
    COLON           shift, and go to state 40
    QUESTION        shift, and go to state 41

    $default  reduce using rule 26 (EXP)


State 53

   25 EXP: EXP . COLON COLON EXPLICIT_TYPE
   26    | EXP . BOOLEAN_LOGIC EXP
   28    | EXP . QUESTION EXP COLON EXP
   29    | EXP . EQUALITY_TEST EXP
   29    | EXP EQUALITY_TEST EXP .
   30    | EXP . ORDER_RELATION EXP
   32    | EXP . ARITHMETIC_1 EXP
   33    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 35
    ARITHMETIC_2  shift, and go to state 36
    COLON         shift, and go to state 40
    QUESTION      shift, and go to state 41

    $default  reduce using rule 29 (EXP)


State 54

   25 EXP: EXP . COLON COLON EXPLICIT_TYPE
   26    | EXP . BOOLEAN_LOGIC EXP
   28    | EXP . QUESTION EXP COLON EXP
   29    | EXP . EQUALITY_TEST EXP
   30    | EXP . ORDER_RELATION EXP
   30    | EXP ORDER_RELATION EXP .
   32    | EXP . ARITHMETIC_1 EXP
   33    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 35
    ARITHMETIC_2  shift, and go to state 36
    COLON         shift, and go to state 40
    QUESTION      shift, and go to state 41

    $default  reduce using rule 30 (EXP)


State 55

   25 EXP: EXP COLON COLON . EXPLICIT_TYPE

    EXPLICIT_TYPE  shift, and go to state 66


State 56

   25 EXP: EXP . COLON COLON EXPLICIT_TYPE
   26    | EXP . BOOLEAN_LOGIC EXP
   28    | EXP . QUESTION EXP COLON EXP
   28    | EXP QUESTION EXP . COLON EXP
   29    | EXP . EQUALITY_TEST EXP
   30    | EXP . ORDER_RELATION EXP
   32    | EXP . ARITHMETIC_1 EXP
   33    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 35
    ARITHMETIC_2    shift, and go to state 36
    BOOLEAN_LOGIC   shift, and go to state 37
    EQUALITY_TEST   shift, and go to state 38
    ORDER_RELATION  shift, and go to state 39
    COLON           shift, and go to state 67
    QUESTION        shift, and go to state 41


State 57

   16 TYPE: INTEGER .

    $default  reduce using rule 16 (TYPE)


State 58

   17 TYPE: FLOAT .

    $default  reduce using rule 17 (TYPE)


State 59

   18 TYPE: BOOLEAN .

    $default  reduce using rule 18 (TYPE)


State 60

   19 TYPE: CHARACTER .

    $default  reduce using rule 19 (TYPE)


State 61

   20 TYPE: STRING .

    $default  reduce using rule 20 (TYPE)


State 62

   15 IS: varConst R_IS TYPE .

    $default  reduce using rule 15 (IS)


State 63

   25 EXP: EXP . COLON COLON EXPLICIT_TYPE
   26    | EXP . BOOLEAN_LOGIC EXP
   28    | EXP . QUESTION EXP COLON EXP
   29    | EXP . EQUALITY_TEST EXP
   30    | EXP . ORDER_RELATION EXP
   31    | varConst ASSIGNMENT EXP .
   32    | EXP . ARITHMETIC_1 EXP
   33    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 35
    ARITHMETIC_2    shift, and go to state 36
    BOOLEAN_LOGIC   shift, and go to state 37
    EQUALITY_TEST   shift, and go to state 38
    ORDER_RELATION  shift, and go to state 39
    COLON           shift, and go to state 40
    QUESTION        shift, and go to state 41

    $default  reduce using rule 31 (EXP)


State 64

   23 COMMA_OUT: COMMA . EXP COMMA_OUT

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 68
    varConst  go to state 27


State 65

   22 OUT: R_OUT COLON EXP COMMA_OUT .

    $default  reduce using rule 22 (OUT)


State 66

   25 EXP: EXP COLON COLON EXPLICIT_TYPE .

    $default  reduce using rule 25 (EXP)


State 67

   25 EXP: EXP COLON . COLON EXPLICIT_TYPE
   28    | EXP QUESTION EXP COLON . EXP

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    COLON      shift, and go to state 55
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 69
    varConst  go to state 27


State 68

   23 COMMA_OUT: COMMA EXP . COMMA_OUT
   25 EXP: EXP . COLON COLON EXPLICIT_TYPE
   26    | EXP . BOOLEAN_LOGIC EXP
   28    | EXP . QUESTION EXP COLON EXP
   29    | EXP . EQUALITY_TEST EXP
   30    | EXP . ORDER_RELATION EXP
   32    | EXP . ARITHMETIC_1 EXP
   33    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 35
    ARITHMETIC_2    shift, and go to state 36
    BOOLEAN_LOGIC   shift, and go to state 37
    EQUALITY_TEST   shift, and go to state 38
    ORDER_RELATION  shift, and go to state 39
    COLON           shift, and go to state 40
    QUESTION        shift, and go to state 41
    COMMA           shift, and go to state 64

    $default  reduce using rule 24 (COMMA_OUT)

    COMMA_OUT  go to state 70


State 69

   25 EXP: EXP . COLON COLON EXPLICIT_TYPE
   26    | EXP . BOOLEAN_LOGIC EXP
   28    | EXP . QUESTION EXP COLON EXP
   28    | EXP QUESTION EXP COLON EXP .
   29    | EXP . EQUALITY_TEST EXP
   30    | EXP . ORDER_RELATION EXP
   32    | EXP . ARITHMETIC_1 EXP
   33    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 35
    ARITHMETIC_2  shift, and go to state 36

    $default  reduce using rule 28 (EXP)


State 70

   23 COMMA_OUT: COMMA EXP COMMA_OUT .

    $default  reduce using rule 23 (COMMA_OUT)
