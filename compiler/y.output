Terminals unused in grammar

   R_WHILE
   R_DO
   R_FOR
   R_SWITCH
   R_CASE
   R_BREAK
   R_CONTINUE


Grammar

    0 $accept: BEFORE_THE_BEGINNING $end

    1 BEFORE_THE_BEGINNING: CMDS

    2 BLOCK: START_SCOPE BLOCK_INIT CMDS BLOCK_END END_SCOPE

    3 START_SCOPE: %empty

    4 END_SCOPE: %empty

    5 CMDS: CMD CMDS
    6     | %empty

    7 IF: R_IF EXP BLOCK ELSE

    8 ELSE: R_ELSE ELSEIF
    9     | %empty

   10 ELSEIF: IF
   11       | BLOCK

   12 CMD: IF
   13    | END_LINE
   14    | IS
   15    | IN
   16    | OUT
   17    | IS SEMI_COLON
   18    | IN SEMI_COLON
   19    | OUT SEMI_COLON
   20    | EXP
   21    | EXP SEMI_COLON

   22 IS: varConst R_IS TYPE

   23 TYPE: INTEGER
   24     | FLOAT
   25     | BOOLEAN
   26     | CHARACTER
   27     | STRING

   28 IN: R_IN COLON varConst

   29 OUT: R_OUT COLON EXP COMMA_OUT

   30 COMMA_OUT: COMMA EXP COMMA_OUT
   31          | %empty

   32 EXP: EXP COLON COLON EXPLICIT_TYPE
   33    | EXP BOOLEAN_LOGIC EXP
   34    | NOT EXP
   35    | EXP QUESTION EXP COLON EXP
   36    | EXP EQUALITY_TEST EXP
   37    | EXP ORDER_RELATION EXP
   38    | varConst ASSIGNMENT EXP
   39    | EXP ARITHMETIC_1 EXP
   40    | EXP ARITHMETIC_2 EXP
   41    | '(' EXP ')'
   42    | VAR
   43    | CONST
   44    | INTEGER
   45    | FLOAT
   46    | BOOLEAN
   47    | CHARACTER
   48    | STRING

   49 varConst: VAR
   50         | CONST


Terminals, with rules where they appear

$end (0) 0
'(' (40) 41
')' (41) 41
error (256)
BLOCK_INIT (258) 2
BLOCK_END (259) 2
SEMI_COLON (260) 17 18 19 21
R_IF (261) 7
R_ELSE (262) 8
R_WHILE (263)
R_DO (264)
R_FOR (265)
R_SWITCH (266)
R_CASE (267)
R_BREAK (268)
R_CONTINUE (269)
R_IN (270) 28
R_OUT (271) 29
R_IS (272) 22
INTEGER (273) 23 44
FLOAT (274) 24 45
BOOLEAN (275) 25 46
CHARACTER (276) 26 47
STRING (277) 27 48
ARITHMETIC_1 (278) 39
ARITHMETIC_2 (279) 40
BOOLEAN_LOGIC (280) 33
EQUALITY_TEST (281) 36
ORDER_RELATION (282) 37
ASSIGNMENT (283) 38
NOT (284) 34
COLON (285) 28 29 32 35
QUESTION (286) 35
COMMA (287) 30
VAR (288) 42 49
CONST (289) 43 50
EXPLICIT_TYPE (290) 32
END_LINE (291) 13


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
BEFORE_THE_BEGINNING (40)
    on left: 1, on right: 0
BLOCK (41)
    on left: 2, on right: 7 11
START_SCOPE (42)
    on left: 3, on right: 2
END_SCOPE (43)
    on left: 4, on right: 2
CMDS (44)
    on left: 5 6, on right: 1 2 5
IF (45)
    on left: 7, on right: 10 12
ELSE (46)
    on left: 8 9, on right: 7
ELSEIF (47)
    on left: 10 11, on right: 8
CMD (48)
    on left: 12 13 14 15 16 17 18 19 20 21, on right: 5
IS (49)
    on left: 22, on right: 14 17
TYPE (50)
    on left: 23 24 25 26 27, on right: 22
IN (51)
    on left: 28, on right: 15 18
OUT (52)
    on left: 29, on right: 16 19
COMMA_OUT (53)
    on left: 30 31, on right: 29 30
EXP (54)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48, on right:
    7 20 21 29 30 32 33 34 35 36 37 38 39 40 41
varConst (55)
    on left: 49 50, on right: 22 28 38


State 0

    0 $accept: . BEFORE_THE_BEGINNING $end

    R_IF       shift, and go to state 1
    R_IN       shift, and go to state 2
    R_OUT      shift, and go to state 3
    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    END_LINE   shift, and go to state 12
    '('        shift, and go to state 13

    $default  reduce using rule 6 (CMDS)

    BEFORE_THE_BEGINNING  go to state 14
    CMDS                  go to state 15
    IF                    go to state 16
    CMD                   go to state 17
    IS                    go to state 18
    IN                    go to state 19
    OUT                   go to state 20
    EXP                   go to state 21
    varConst              go to state 22


State 1

    7 IF: R_IF . EXP BLOCK ELSE

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 23
    varConst  go to state 24


State 2

   28 IN: R_IN . COLON varConst

    COLON  shift, and go to state 25


State 3

   29 OUT: R_OUT . COLON EXP COMMA_OUT

    COLON  shift, and go to state 26


State 4

   44 EXP: INTEGER .

    $default  reduce using rule 44 (EXP)


State 5

   45 EXP: FLOAT .

    $default  reduce using rule 45 (EXP)


State 6

   46 EXP: BOOLEAN .

    $default  reduce using rule 46 (EXP)


State 7

   47 EXP: CHARACTER .

    $default  reduce using rule 47 (EXP)


State 8

   48 EXP: STRING .

    $default  reduce using rule 48 (EXP)


State 9

   34 EXP: NOT . EXP

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 27
    varConst  go to state 24


State 10

   42 EXP: VAR .
   49 varConst: VAR .

    R_IS        reduce using rule 49 (varConst)
    ASSIGNMENT  reduce using rule 49 (varConst)
    $default    reduce using rule 42 (EXP)


State 11

   43 EXP: CONST .
   50 varConst: CONST .

    R_IS        reduce using rule 50 (varConst)
    ASSIGNMENT  reduce using rule 50 (varConst)
    $default    reduce using rule 43 (EXP)


State 12

   13 CMD: END_LINE .

    $default  reduce using rule 13 (CMD)


State 13

   41 EXP: '(' . EXP ')'

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 28
    varConst  go to state 24


State 14

    0 $accept: BEFORE_THE_BEGINNING . $end

    $end  shift, and go to state 29


State 15

    1 BEFORE_THE_BEGINNING: CMDS .

    $default  reduce using rule 1 (BEFORE_THE_BEGINNING)


State 16

   12 CMD: IF .

    $default  reduce using rule 12 (CMD)


State 17

    5 CMDS: CMD . CMDS

    R_IF       shift, and go to state 1
    R_IN       shift, and go to state 2
    R_OUT      shift, and go to state 3
    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    END_LINE   shift, and go to state 12
    '('        shift, and go to state 13

    $default  reduce using rule 6 (CMDS)

    CMDS      go to state 30
    IF        go to state 16
    CMD       go to state 17
    IS        go to state 18
    IN        go to state 19
    OUT       go to state 20
    EXP       go to state 21
    varConst  go to state 22


State 18

   14 CMD: IS .
   17    | IS . SEMI_COLON

    SEMI_COLON  shift, and go to state 31

    $default  reduce using rule 14 (CMD)


State 19

   15 CMD: IN .
   18    | IN . SEMI_COLON

    SEMI_COLON  shift, and go to state 32

    $default  reduce using rule 15 (CMD)


State 20

   16 CMD: OUT .
   19    | OUT . SEMI_COLON

    SEMI_COLON  shift, and go to state 33

    $default  reduce using rule 16 (CMD)


State 21

   20 CMD: EXP .
   21    | EXP . SEMI_COLON
   32 EXP: EXP . COLON COLON EXPLICIT_TYPE
   33    | EXP . BOOLEAN_LOGIC EXP
   35    | EXP . QUESTION EXP COLON EXP
   36    | EXP . EQUALITY_TEST EXP
   37    | EXP . ORDER_RELATION EXP
   39    | EXP . ARITHMETIC_1 EXP
   40    | EXP . ARITHMETIC_2 EXP

    SEMI_COLON      shift, and go to state 34
    ARITHMETIC_1    shift, and go to state 35
    ARITHMETIC_2    shift, and go to state 36
    BOOLEAN_LOGIC   shift, and go to state 37
    EQUALITY_TEST   shift, and go to state 38
    ORDER_RELATION  shift, and go to state 39
    COLON           shift, and go to state 40
    QUESTION        shift, and go to state 41

    $default  reduce using rule 20 (CMD)


State 22

   22 IS: varConst . R_IS TYPE
   38 EXP: varConst . ASSIGNMENT EXP

    R_IS        shift, and go to state 42
    ASSIGNMENT  shift, and go to state 43


State 23

    7 IF: R_IF EXP . BLOCK ELSE
   32 EXP: EXP . COLON COLON EXPLICIT_TYPE
   33    | EXP . BOOLEAN_LOGIC EXP
   35    | EXP . QUESTION EXP COLON EXP
   36    | EXP . EQUALITY_TEST EXP
   37    | EXP . ORDER_RELATION EXP
   39    | EXP . ARITHMETIC_1 EXP
   40    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 35
    ARITHMETIC_2    shift, and go to state 36
    BOOLEAN_LOGIC   shift, and go to state 37
    EQUALITY_TEST   shift, and go to state 38
    ORDER_RELATION  shift, and go to state 39
    COLON           shift, and go to state 40
    QUESTION        shift, and go to state 41

    $default  reduce using rule 3 (START_SCOPE)

    BLOCK        go to state 44
    START_SCOPE  go to state 45


State 24

   38 EXP: varConst . ASSIGNMENT EXP

    ASSIGNMENT  shift, and go to state 43


State 25

   28 IN: R_IN COLON . varConst

    VAR    shift, and go to state 46
    CONST  shift, and go to state 47

    varConst  go to state 48


State 26

   29 OUT: R_OUT COLON . EXP COMMA_OUT

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 49
    varConst  go to state 24


State 27

   32 EXP: EXP . COLON COLON EXPLICIT_TYPE
   33    | EXP . BOOLEAN_LOGIC EXP
   34    | NOT EXP .
   35    | EXP . QUESTION EXP COLON EXP
   36    | EXP . EQUALITY_TEST EXP
   37    | EXP . ORDER_RELATION EXP
   39    | EXP . ARITHMETIC_1 EXP
   40    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 35
    ARITHMETIC_2  shift, and go to state 36

    $default  reduce using rule 34 (EXP)


State 28

   32 EXP: EXP . COLON COLON EXPLICIT_TYPE
   33    | EXP . BOOLEAN_LOGIC EXP
   35    | EXP . QUESTION EXP COLON EXP
   36    | EXP . EQUALITY_TEST EXP
   37    | EXP . ORDER_RELATION EXP
   39    | EXP . ARITHMETIC_1 EXP
   40    | EXP . ARITHMETIC_2 EXP
   41    | '(' EXP . ')'

    ARITHMETIC_1    shift, and go to state 35
    ARITHMETIC_2    shift, and go to state 36
    BOOLEAN_LOGIC   shift, and go to state 37
    EQUALITY_TEST   shift, and go to state 38
    ORDER_RELATION  shift, and go to state 39
    COLON           shift, and go to state 40
    QUESTION        shift, and go to state 41
    ')'             shift, and go to state 50


State 29

    0 $accept: BEFORE_THE_BEGINNING $end .

    $default  accept


State 30

    5 CMDS: CMD CMDS .

    $default  reduce using rule 5 (CMDS)


State 31

   17 CMD: IS SEMI_COLON .

    $default  reduce using rule 17 (CMD)


State 32

   18 CMD: IN SEMI_COLON .

    $default  reduce using rule 18 (CMD)


State 33

   19 CMD: OUT SEMI_COLON .

    $default  reduce using rule 19 (CMD)


State 34

   21 CMD: EXP SEMI_COLON .

    $default  reduce using rule 21 (CMD)


State 35

   39 EXP: EXP ARITHMETIC_1 . EXP

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 51
    varConst  go to state 24


State 36

   40 EXP: EXP ARITHMETIC_2 . EXP

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 52
    varConst  go to state 24


State 37

   33 EXP: EXP BOOLEAN_LOGIC . EXP

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 53
    varConst  go to state 24


State 38

   36 EXP: EXP EQUALITY_TEST . EXP

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 54
    varConst  go to state 24


State 39

   37 EXP: EXP ORDER_RELATION . EXP

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 55
    varConst  go to state 24


State 40

   32 EXP: EXP COLON . COLON EXPLICIT_TYPE

    COLON  shift, and go to state 56


State 41

   35 EXP: EXP QUESTION . EXP COLON EXP

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 57
    varConst  go to state 24


State 42

   22 IS: varConst R_IS . TYPE

    INTEGER    shift, and go to state 58
    FLOAT      shift, and go to state 59
    BOOLEAN    shift, and go to state 60
    CHARACTER  shift, and go to state 61
    STRING     shift, and go to state 62

    TYPE  go to state 63


State 43

   38 EXP: varConst ASSIGNMENT . EXP

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 64
    varConst  go to state 24


State 44

    7 IF: R_IF EXP BLOCK . ELSE

    R_ELSE  shift, and go to state 65

    $default  reduce using rule 9 (ELSE)

    ELSE  go to state 66


State 45

    2 BLOCK: START_SCOPE . BLOCK_INIT CMDS BLOCK_END END_SCOPE

    BLOCK_INIT  shift, and go to state 67


State 46

   49 varConst: VAR .

    $default  reduce using rule 49 (varConst)


State 47

   50 varConst: CONST .

    $default  reduce using rule 50 (varConst)


State 48

   28 IN: R_IN COLON varConst .

    $default  reduce using rule 28 (IN)


State 49

   29 OUT: R_OUT COLON EXP . COMMA_OUT
   32 EXP: EXP . COLON COLON EXPLICIT_TYPE
   33    | EXP . BOOLEAN_LOGIC EXP
   35    | EXP . QUESTION EXP COLON EXP
   36    | EXP . EQUALITY_TEST EXP
   37    | EXP . ORDER_RELATION EXP
   39    | EXP . ARITHMETIC_1 EXP
   40    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 35
    ARITHMETIC_2    shift, and go to state 36
    BOOLEAN_LOGIC   shift, and go to state 37
    EQUALITY_TEST   shift, and go to state 38
    ORDER_RELATION  shift, and go to state 39
    COLON           shift, and go to state 40
    QUESTION        shift, and go to state 41
    COMMA           shift, and go to state 68

    $default  reduce using rule 31 (COMMA_OUT)

    COMMA_OUT  go to state 69


State 50

   41 EXP: '(' EXP ')' .

    $default  reduce using rule 41 (EXP)


State 51

   32 EXP: EXP . COLON COLON EXPLICIT_TYPE
   33    | EXP . BOOLEAN_LOGIC EXP
   35    | EXP . QUESTION EXP COLON EXP
   36    | EXP . EQUALITY_TEST EXP
   37    | EXP . ORDER_RELATION EXP
   39    | EXP . ARITHMETIC_1 EXP
   39    | EXP ARITHMETIC_1 EXP .
   40    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_2  shift, and go to state 36

    $default  reduce using rule 39 (EXP)


State 52

   32 EXP: EXP . COLON COLON EXPLICIT_TYPE
   33    | EXP . BOOLEAN_LOGIC EXP
   35    | EXP . QUESTION EXP COLON EXP
   36    | EXP . EQUALITY_TEST EXP
   37    | EXP . ORDER_RELATION EXP
   39    | EXP . ARITHMETIC_1 EXP
   40    | EXP . ARITHMETIC_2 EXP
   40    | EXP ARITHMETIC_2 EXP .

    $default  reduce using rule 40 (EXP)


State 53

   32 EXP: EXP . COLON COLON EXPLICIT_TYPE
   33    | EXP . BOOLEAN_LOGIC EXP
   33    | EXP BOOLEAN_LOGIC EXP .
   35    | EXP . QUESTION EXP COLON EXP
   36    | EXP . EQUALITY_TEST EXP
   37    | EXP . ORDER_RELATION EXP
   39    | EXP . ARITHMETIC_1 EXP
   40    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 35
    ARITHMETIC_2    shift, and go to state 36
    EQUALITY_TEST   shift, and go to state 38
    ORDER_RELATION  shift, and go to state 39
    COLON           shift, and go to state 40
    QUESTION        shift, and go to state 41

    $default  reduce using rule 33 (EXP)


State 54

   32 EXP: EXP . COLON COLON EXPLICIT_TYPE
   33    | EXP . BOOLEAN_LOGIC EXP
   35    | EXP . QUESTION EXP COLON EXP
   36    | EXP . EQUALITY_TEST EXP
   36    | EXP EQUALITY_TEST EXP .
   37    | EXP . ORDER_RELATION EXP
   39    | EXP . ARITHMETIC_1 EXP
   40    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 35
    ARITHMETIC_2  shift, and go to state 36
    COLON         shift, and go to state 40
    QUESTION      shift, and go to state 41

    $default  reduce using rule 36 (EXP)


State 55

   32 EXP: EXP . COLON COLON EXPLICIT_TYPE
   33    | EXP . BOOLEAN_LOGIC EXP
   35    | EXP . QUESTION EXP COLON EXP
   36    | EXP . EQUALITY_TEST EXP
   37    | EXP . ORDER_RELATION EXP
   37    | EXP ORDER_RELATION EXP .
   39    | EXP . ARITHMETIC_1 EXP
   40    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 35
    ARITHMETIC_2  shift, and go to state 36
    COLON         shift, and go to state 40
    QUESTION      shift, and go to state 41

    $default  reduce using rule 37 (EXP)


State 56

   32 EXP: EXP COLON COLON . EXPLICIT_TYPE

    EXPLICIT_TYPE  shift, and go to state 70


State 57

   32 EXP: EXP . COLON COLON EXPLICIT_TYPE
   33    | EXP . BOOLEAN_LOGIC EXP
   35    | EXP . QUESTION EXP COLON EXP
   35    | EXP QUESTION EXP . COLON EXP
   36    | EXP . EQUALITY_TEST EXP
   37    | EXP . ORDER_RELATION EXP
   39    | EXP . ARITHMETIC_1 EXP
   40    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 35
    ARITHMETIC_2    shift, and go to state 36
    BOOLEAN_LOGIC   shift, and go to state 37
    EQUALITY_TEST   shift, and go to state 38
    ORDER_RELATION  shift, and go to state 39
    COLON           shift, and go to state 71
    QUESTION        shift, and go to state 41


State 58

   23 TYPE: INTEGER .

    $default  reduce using rule 23 (TYPE)


State 59

   24 TYPE: FLOAT .

    $default  reduce using rule 24 (TYPE)


State 60

   25 TYPE: BOOLEAN .

    $default  reduce using rule 25 (TYPE)


State 61

   26 TYPE: CHARACTER .

    $default  reduce using rule 26 (TYPE)


State 62

   27 TYPE: STRING .

    $default  reduce using rule 27 (TYPE)


State 63

   22 IS: varConst R_IS TYPE .

    $default  reduce using rule 22 (IS)


State 64

   32 EXP: EXP . COLON COLON EXPLICIT_TYPE
   33    | EXP . BOOLEAN_LOGIC EXP
   35    | EXP . QUESTION EXP COLON EXP
   36    | EXP . EQUALITY_TEST EXP
   37    | EXP . ORDER_RELATION EXP
   38    | varConst ASSIGNMENT EXP .
   39    | EXP . ARITHMETIC_1 EXP
   40    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 35
    ARITHMETIC_2    shift, and go to state 36
    BOOLEAN_LOGIC   shift, and go to state 37
    EQUALITY_TEST   shift, and go to state 38
    ORDER_RELATION  shift, and go to state 39
    COLON           shift, and go to state 40
    QUESTION        shift, and go to state 41

    $default  reduce using rule 38 (EXP)


State 65

    8 ELSE: R_ELSE . ELSEIF

    R_IF  shift, and go to state 1

    $default  reduce using rule 3 (START_SCOPE)

    BLOCK        go to state 72
    START_SCOPE  go to state 45
    IF           go to state 73
    ELSEIF       go to state 74


State 66

    7 IF: R_IF EXP BLOCK ELSE .

    $default  reduce using rule 7 (IF)


State 67

    2 BLOCK: START_SCOPE BLOCK_INIT . CMDS BLOCK_END END_SCOPE

    R_IF       shift, and go to state 1
    R_IN       shift, and go to state 2
    R_OUT      shift, and go to state 3
    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    END_LINE   shift, and go to state 12
    '('        shift, and go to state 13

    $default  reduce using rule 6 (CMDS)

    CMDS      go to state 75
    IF        go to state 16
    CMD       go to state 17
    IS        go to state 18
    IN        go to state 19
    OUT       go to state 20
    EXP       go to state 21
    varConst  go to state 22


State 68

   30 COMMA_OUT: COMMA . EXP COMMA_OUT

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 76
    varConst  go to state 24


State 69

   29 OUT: R_OUT COLON EXP COMMA_OUT .

    $default  reduce using rule 29 (OUT)


State 70

   32 EXP: EXP COLON COLON EXPLICIT_TYPE .

    $default  reduce using rule 32 (EXP)


State 71

   32 EXP: EXP COLON . COLON EXPLICIT_TYPE
   35    | EXP QUESTION EXP COLON . EXP

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    BOOLEAN    shift, and go to state 6
    CHARACTER  shift, and go to state 7
    STRING     shift, and go to state 8
    NOT        shift, and go to state 9
    COLON      shift, and go to state 56
    VAR        shift, and go to state 10
    CONST      shift, and go to state 11
    '('        shift, and go to state 13

    EXP       go to state 77
    varConst  go to state 24


State 72

   11 ELSEIF: BLOCK .

    $default  reduce using rule 11 (ELSEIF)


State 73

   10 ELSEIF: IF .

    $default  reduce using rule 10 (ELSEIF)


State 74

    8 ELSE: R_ELSE ELSEIF .

    $default  reduce using rule 8 (ELSE)


State 75

    2 BLOCK: START_SCOPE BLOCK_INIT CMDS . BLOCK_END END_SCOPE

    BLOCK_END  shift, and go to state 78


State 76

   30 COMMA_OUT: COMMA EXP . COMMA_OUT
   32 EXP: EXP . COLON COLON EXPLICIT_TYPE
   33    | EXP . BOOLEAN_LOGIC EXP
   35    | EXP . QUESTION EXP COLON EXP
   36    | EXP . EQUALITY_TEST EXP
   37    | EXP . ORDER_RELATION EXP
   39    | EXP . ARITHMETIC_1 EXP
   40    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 35
    ARITHMETIC_2    shift, and go to state 36
    BOOLEAN_LOGIC   shift, and go to state 37
    EQUALITY_TEST   shift, and go to state 38
    ORDER_RELATION  shift, and go to state 39
    COLON           shift, and go to state 40
    QUESTION        shift, and go to state 41
    COMMA           shift, and go to state 68

    $default  reduce using rule 31 (COMMA_OUT)

    COMMA_OUT  go to state 79


State 77

   32 EXP: EXP . COLON COLON EXPLICIT_TYPE
   33    | EXP . BOOLEAN_LOGIC EXP
   35    | EXP . QUESTION EXP COLON EXP
   35    | EXP QUESTION EXP COLON EXP .
   36    | EXP . EQUALITY_TEST EXP
   37    | EXP . ORDER_RELATION EXP
   39    | EXP . ARITHMETIC_1 EXP
   40    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 35
    ARITHMETIC_2  shift, and go to state 36

    $default  reduce using rule 35 (EXP)


State 78

    2 BLOCK: START_SCOPE BLOCK_INIT CMDS BLOCK_END . END_SCOPE

    $default  reduce using rule 4 (END_SCOPE)

    END_SCOPE  go to state 80


State 79

   30 COMMA_OUT: COMMA EXP COMMA_OUT .

    $default  reduce using rule 30 (COMMA_OUT)


State 80

    2 BLOCK: START_SCOPE BLOCK_INIT CMDS BLOCK_END END_SCOPE .

    $default  reduce using rule 2 (BLOCK)
