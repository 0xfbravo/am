State 93 conflicts: 1 shift/reduce
State 105 conflicts: 2 shift/reduce


Grammar

    0 $accept: BEFORE_THE_BEGINNING $end

    1 BEFORE_THE_BEGINNING: CMDS

    2 BLOCK: START_SCOPE BLOCK_INIT CMDS BLOCK_END END_SCOPE

    3 START_SCOPE: %empty

    4 END_SCOPE: %empty

    5 CMDS: CMD CMDS
    6     | %empty

    7 WHILE: R_WHILE EXP BLOCK

    8 DO_WHILE: R_DO BLOCK R_WHILE EXP

    9 IF: R_IF EXP BLOCK ELSE

   10 ELSE: R_ELSE ELSEIF
   11     | %empty

   12 ELSEIF: IF
   13       | BLOCK

   14 FOR: R_FOR '(' ASSIGNMENT_STATE SEMI_COLON EXP SEMI_COLON ASSIGNMENT_STATE ')' BLOCK

   15 SWITCH: R_SWITCH EXP BLOCK_INIT END_LINE CASES BLOCK_END

   16 CASES: CASE DEFAULT
   17      | CASE CASES

   18 CASE: R_CASE EXP COLON CMDS
   19     | %empty

   20 DEFAULT: R_DEFAULT COLON CMDS

   21 BREAK: R_BREAK

   22 CONTINUE: R_CONTINUE

   23 ASSIGNMENT_STATE: varConst ASSIGNMENT EXP

   24 CMD: IF
   25    | WHILE
   26    | DO_WHILE
   27    | END_LINE
   28    | FOR
   29    | SWITCH
   30    | BREAK
   31    | CONTINUE
   32    | IS
   33    | IN
   34    | OUT
   35    | IS SEMI_COLON
   36    | IN SEMI_COLON
   37    | OUT SEMI_COLON
   38    | ASSIGNMENT_STATE
   39    | ASSIGNMENT_STATE SEMI_COLON

   40 IS: varConst R_IS TYPE

   41 TYPE: INTEGER
   42     | FLOAT
   43     | BOOLEAN
   44     | CHARACTER
   45     | STRING

   46 IN: R_IN COLON varConst

   47 OUT: R_OUT COLON EXP COMMA_OUT

   48 COMMA_OUT: COMMA EXP COMMA_OUT
   49          | %empty

   50 EXP: EXP R_DOT EXP
   51    | EXP COLON COLON EXPLICIT_TYPE
   52    | EXP BOOLEAN_LOGIC EXP
   53    | NOT EXP
   54    | EXP QUESTION EXP COLON EXP
   55    | EXP EQUALITY_TEST EXP
   56    | EXP ORDER_RELATION EXP
   57    | EXP ARITHMETIC_1 EXP
   58    | EXP ARITHMETIC_2 EXP
   59    | '(' EXP ')'
   60    | VAR
   61    | CONST
   62    | INTEGER
   63    | FLOAT
   64    | BOOLEAN
   65    | CHARACTER
   66    | STRING

   67 varConst: VAR
   68         | CONST


Terminals, with rules where they appear

$end (0) 0
'(' (40) 14 59
')' (41) 14 59
error (256)
BLOCK_INIT (258) 2 15
BLOCK_END (259) 2 15
SEMI_COLON (260) 14 35 36 37 39
R_IF (261) 9
R_ELSE (262) 10
R_WHILE (263) 7 8
R_DO (264) 8
R_FOR (265) 14
R_SWITCH (266) 15
R_CASE (267) 18
R_DEFAULT (268) 20
R_BREAK (269) 21
R_CONTINUE (270) 22
R_IN (271) 46
R_OUT (272) 47
R_IS (273) 40
R_DOT (274) 50
INTEGER (275) 41 62
FLOAT (276) 42 63
BOOLEAN (277) 43 64
CHARACTER (278) 44 65
STRING (279) 45 66
ARITHMETIC_1 (280) 57
ARITHMETIC_2 (281) 58
BOOLEAN_LOGIC (282) 52
EQUALITY_TEST (283) 55
ORDER_RELATION (284) 56
ASSIGNMENT (285) 23
NOT (286) 53
COLON (287) 18 20 46 47 51 54
QUESTION (288) 54
COMMA (289) 48
VAR (290) 60 67
CONST (291) 61 68
EXPLICIT_TYPE (292) 51
END_LINE (293) 15 27


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
BEFORE_THE_BEGINNING (42)
    on left: 1, on right: 0
BLOCK (43)
    on left: 2, on right: 7 8 9 13 14
START_SCOPE (44)
    on left: 3, on right: 2
END_SCOPE (45)
    on left: 4, on right: 2
CMDS (46)
    on left: 5 6, on right: 1 2 5 18 20
WHILE (47)
    on left: 7, on right: 25
DO_WHILE (48)
    on left: 8, on right: 26
IF (49)
    on left: 9, on right: 12 24
ELSE (50)
    on left: 10 11, on right: 9
ELSEIF (51)
    on left: 12 13, on right: 10
FOR (52)
    on left: 14, on right: 28
SWITCH (53)
    on left: 15, on right: 29
CASES (54)
    on left: 16 17, on right: 15 17
CASE (55)
    on left: 18 19, on right: 16 17
DEFAULT (56)
    on left: 20, on right: 16
BREAK (57)
    on left: 21, on right: 30
CONTINUE (58)
    on left: 22, on right: 31
ASSIGNMENT_STATE (59)
    on left: 23, on right: 14 38 39
CMD (60)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39, on right:
    5
IS (61)
    on left: 40, on right: 32 35
TYPE (62)
    on left: 41 42 43 44 45, on right: 40
IN (63)
    on left: 46, on right: 33 36
OUT (64)
    on left: 47, on right: 34 37
COMMA_OUT (65)
    on left: 48 49, on right: 47 48
EXP (66)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66, on right:
    7 8 9 14 15 18 23 47 48 50 51 52 53 54 55 56 57 58 59
varConst (67)
    on left: 67 68, on right: 23 40 46


State 0

    0 $accept: . BEFORE_THE_BEGINNING $end

    R_IF        shift, and go to state 1
    R_WHILE     shift, and go to state 2
    R_DO        shift, and go to state 3
    R_FOR       shift, and go to state 4
    R_SWITCH    shift, and go to state 5
    R_BREAK     shift, and go to state 6
    R_CONTINUE  shift, and go to state 7
    R_IN        shift, and go to state 8
    R_OUT       shift, and go to state 9
    VAR         shift, and go to state 10
    CONST       shift, and go to state 11
    END_LINE    shift, and go to state 12

    $default  reduce using rule 6 (CMDS)

    BEFORE_THE_BEGINNING  go to state 13
    CMDS                  go to state 14
    WHILE                 go to state 15
    DO_WHILE              go to state 16
    IF                    go to state 17
    FOR                   go to state 18
    SWITCH                go to state 19
    BREAK                 go to state 20
    CONTINUE              go to state 21
    ASSIGNMENT_STATE      go to state 22
    CMD                   go to state 23
    IS                    go to state 24
    IN                    go to state 25
    OUT                   go to state 26
    varConst              go to state 27


State 1

    9 IF: R_IF . EXP BLOCK ELSE

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 37


State 2

    7 WHILE: R_WHILE . EXP BLOCK

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 38


State 3

    8 DO_WHILE: R_DO . BLOCK R_WHILE EXP

    $default  reduce using rule 3 (START_SCOPE)

    BLOCK        go to state 39
    START_SCOPE  go to state 40


State 4

   14 FOR: R_FOR . '(' ASSIGNMENT_STATE SEMI_COLON EXP SEMI_COLON ASSIGNMENT_STATE ')' BLOCK

    '('  shift, and go to state 41


State 5

   15 SWITCH: R_SWITCH . EXP BLOCK_INIT END_LINE CASES BLOCK_END

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 42


State 6

   21 BREAK: R_BREAK .

    $default  reduce using rule 21 (BREAK)


State 7

   22 CONTINUE: R_CONTINUE .

    $default  reduce using rule 22 (CONTINUE)


State 8

   46 IN: R_IN . COLON varConst

    COLON  shift, and go to state 43


State 9

   47 OUT: R_OUT . COLON EXP COMMA_OUT

    COLON  shift, and go to state 44


State 10

   67 varConst: VAR .

    $default  reduce using rule 67 (varConst)


State 11

   68 varConst: CONST .

    $default  reduce using rule 68 (varConst)


State 12

   27 CMD: END_LINE .

    $default  reduce using rule 27 (CMD)


State 13

    0 $accept: BEFORE_THE_BEGINNING . $end

    $end  shift, and go to state 45


State 14

    1 BEFORE_THE_BEGINNING: CMDS .

    $default  reduce using rule 1 (BEFORE_THE_BEGINNING)


State 15

   25 CMD: WHILE .

    $default  reduce using rule 25 (CMD)


State 16

   26 CMD: DO_WHILE .

    $default  reduce using rule 26 (CMD)


State 17

   24 CMD: IF .

    $default  reduce using rule 24 (CMD)


State 18

   28 CMD: FOR .

    $default  reduce using rule 28 (CMD)


State 19

   29 CMD: SWITCH .

    $default  reduce using rule 29 (CMD)


State 20

   30 CMD: BREAK .

    $default  reduce using rule 30 (CMD)


State 21

   31 CMD: CONTINUE .

    $default  reduce using rule 31 (CMD)


State 22

   38 CMD: ASSIGNMENT_STATE .
   39    | ASSIGNMENT_STATE . SEMI_COLON

    SEMI_COLON  shift, and go to state 46

    $default  reduce using rule 38 (CMD)


State 23

    5 CMDS: CMD . CMDS

    R_IF        shift, and go to state 1
    R_WHILE     shift, and go to state 2
    R_DO        shift, and go to state 3
    R_FOR       shift, and go to state 4
    R_SWITCH    shift, and go to state 5
    R_BREAK     shift, and go to state 6
    R_CONTINUE  shift, and go to state 7
    R_IN        shift, and go to state 8
    R_OUT       shift, and go to state 9
    VAR         shift, and go to state 10
    CONST       shift, and go to state 11
    END_LINE    shift, and go to state 12

    $default  reduce using rule 6 (CMDS)

    CMDS              go to state 47
    WHILE             go to state 15
    DO_WHILE          go to state 16
    IF                go to state 17
    FOR               go to state 18
    SWITCH            go to state 19
    BREAK             go to state 20
    CONTINUE          go to state 21
    ASSIGNMENT_STATE  go to state 22
    CMD               go to state 23
    IS                go to state 24
    IN                go to state 25
    OUT               go to state 26
    varConst          go to state 27


State 24

   32 CMD: IS .
   35    | IS . SEMI_COLON

    SEMI_COLON  shift, and go to state 48

    $default  reduce using rule 32 (CMD)


State 25

   33 CMD: IN .
   36    | IN . SEMI_COLON

    SEMI_COLON  shift, and go to state 49

    $default  reduce using rule 33 (CMD)


State 26

   34 CMD: OUT .
   37    | OUT . SEMI_COLON

    SEMI_COLON  shift, and go to state 50

    $default  reduce using rule 34 (CMD)


State 27

   23 ASSIGNMENT_STATE: varConst . ASSIGNMENT EXP
   40 IS: varConst . R_IS TYPE

    R_IS        shift, and go to state 51
    ASSIGNMENT  shift, and go to state 52


State 28

   62 EXP: INTEGER .

    $default  reduce using rule 62 (EXP)


State 29

   63 EXP: FLOAT .

    $default  reduce using rule 63 (EXP)


State 30

   64 EXP: BOOLEAN .

    $default  reduce using rule 64 (EXP)


State 31

   65 EXP: CHARACTER .

    $default  reduce using rule 65 (EXP)


State 32

   66 EXP: STRING .

    $default  reduce using rule 66 (EXP)


State 33

   53 EXP: NOT . EXP

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 53


State 34

   60 EXP: VAR .

    $default  reduce using rule 60 (EXP)


State 35

   61 EXP: CONST .

    $default  reduce using rule 61 (EXP)


State 36

   59 EXP: '(' . EXP ')'

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 54


State 37

    9 IF: R_IF EXP . BLOCK ELSE
   50 EXP: EXP . R_DOT EXP
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   54    | EXP . QUESTION EXP COLON EXP
   55    | EXP . EQUALITY_TEST EXP
   56    | EXP . ORDER_RELATION EXP
   57    | EXP . ARITHMETIC_1 EXP
   58    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 55
    ARITHMETIC_1    shift, and go to state 56
    ARITHMETIC_2    shift, and go to state 57
    BOOLEAN_LOGIC   shift, and go to state 58
    EQUALITY_TEST   shift, and go to state 59
    ORDER_RELATION  shift, and go to state 60
    COLON           shift, and go to state 61
    QUESTION        shift, and go to state 62

    $default  reduce using rule 3 (START_SCOPE)

    BLOCK        go to state 63
    START_SCOPE  go to state 40


State 38

    7 WHILE: R_WHILE EXP . BLOCK
   50 EXP: EXP . R_DOT EXP
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   54    | EXP . QUESTION EXP COLON EXP
   55    | EXP . EQUALITY_TEST EXP
   56    | EXP . ORDER_RELATION EXP
   57    | EXP . ARITHMETIC_1 EXP
   58    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 55
    ARITHMETIC_1    shift, and go to state 56
    ARITHMETIC_2    shift, and go to state 57
    BOOLEAN_LOGIC   shift, and go to state 58
    EQUALITY_TEST   shift, and go to state 59
    ORDER_RELATION  shift, and go to state 60
    COLON           shift, and go to state 61
    QUESTION        shift, and go to state 62

    $default  reduce using rule 3 (START_SCOPE)

    BLOCK        go to state 64
    START_SCOPE  go to state 40


State 39

    8 DO_WHILE: R_DO BLOCK . R_WHILE EXP

    R_WHILE  shift, and go to state 65


State 40

    2 BLOCK: START_SCOPE . BLOCK_INIT CMDS BLOCK_END END_SCOPE

    BLOCK_INIT  shift, and go to state 66


State 41

   14 FOR: R_FOR '(' . ASSIGNMENT_STATE SEMI_COLON EXP SEMI_COLON ASSIGNMENT_STATE ')' BLOCK

    VAR    shift, and go to state 10
    CONST  shift, and go to state 11

    ASSIGNMENT_STATE  go to state 67
    varConst          go to state 68


State 42

   15 SWITCH: R_SWITCH EXP . BLOCK_INIT END_LINE CASES BLOCK_END
   50 EXP: EXP . R_DOT EXP
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   54    | EXP . QUESTION EXP COLON EXP
   55    | EXP . EQUALITY_TEST EXP
   56    | EXP . ORDER_RELATION EXP
   57    | EXP . ARITHMETIC_1 EXP
   58    | EXP . ARITHMETIC_2 EXP

    BLOCK_INIT      shift, and go to state 69
    R_DOT           shift, and go to state 55
    ARITHMETIC_1    shift, and go to state 56
    ARITHMETIC_2    shift, and go to state 57
    BOOLEAN_LOGIC   shift, and go to state 58
    EQUALITY_TEST   shift, and go to state 59
    ORDER_RELATION  shift, and go to state 60
    COLON           shift, and go to state 61
    QUESTION        shift, and go to state 62


State 43

   46 IN: R_IN COLON . varConst

    VAR    shift, and go to state 10
    CONST  shift, and go to state 11

    varConst  go to state 70


State 44

   47 OUT: R_OUT COLON . EXP COMMA_OUT

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 71


State 45

    0 $accept: BEFORE_THE_BEGINNING $end .

    $default  accept


State 46

   39 CMD: ASSIGNMENT_STATE SEMI_COLON .

    $default  reduce using rule 39 (CMD)


State 47

    5 CMDS: CMD CMDS .

    $default  reduce using rule 5 (CMDS)


State 48

   35 CMD: IS SEMI_COLON .

    $default  reduce using rule 35 (CMD)


State 49

   36 CMD: IN SEMI_COLON .

    $default  reduce using rule 36 (CMD)


State 50

   37 CMD: OUT SEMI_COLON .

    $default  reduce using rule 37 (CMD)


State 51

   40 IS: varConst R_IS . TYPE

    INTEGER    shift, and go to state 72
    FLOAT      shift, and go to state 73
    BOOLEAN    shift, and go to state 74
    CHARACTER  shift, and go to state 75
    STRING     shift, and go to state 76

    TYPE  go to state 77


State 52

   23 ASSIGNMENT_STATE: varConst ASSIGNMENT . EXP

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 78


State 53

   50 EXP: EXP . R_DOT EXP
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   53    | NOT EXP .
   54    | EXP . QUESTION EXP COLON EXP
   55    | EXP . EQUALITY_TEST EXP
   56    | EXP . ORDER_RELATION EXP
   57    | EXP . ARITHMETIC_1 EXP
   58    | EXP . ARITHMETIC_2 EXP

    R_DOT         shift, and go to state 55
    ARITHMETIC_1  shift, and go to state 56
    ARITHMETIC_2  shift, and go to state 57

    $default  reduce using rule 53 (EXP)


State 54

   50 EXP: EXP . R_DOT EXP
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   54    | EXP . QUESTION EXP COLON EXP
   55    | EXP . EQUALITY_TEST EXP
   56    | EXP . ORDER_RELATION EXP
   57    | EXP . ARITHMETIC_1 EXP
   58    | EXP . ARITHMETIC_2 EXP
   59    | '(' EXP . ')'

    R_DOT           shift, and go to state 55
    ARITHMETIC_1    shift, and go to state 56
    ARITHMETIC_2    shift, and go to state 57
    BOOLEAN_LOGIC   shift, and go to state 58
    EQUALITY_TEST   shift, and go to state 59
    ORDER_RELATION  shift, and go to state 60
    COLON           shift, and go to state 61
    QUESTION        shift, and go to state 62
    ')'             shift, and go to state 79


State 55

   50 EXP: EXP R_DOT . EXP

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 80


State 56

   57 EXP: EXP ARITHMETIC_1 . EXP

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 81


State 57

   58 EXP: EXP ARITHMETIC_2 . EXP

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 82


State 58

   52 EXP: EXP BOOLEAN_LOGIC . EXP

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 83


State 59

   55 EXP: EXP EQUALITY_TEST . EXP

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 84


State 60

   56 EXP: EXP ORDER_RELATION . EXP

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 85


State 61

   51 EXP: EXP COLON . COLON EXPLICIT_TYPE

    COLON  shift, and go to state 86


State 62

   54 EXP: EXP QUESTION . EXP COLON EXP

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 87


State 63

    9 IF: R_IF EXP BLOCK . ELSE

    R_ELSE  shift, and go to state 88

    $default  reduce using rule 11 (ELSE)

    ELSE  go to state 89


State 64

    7 WHILE: R_WHILE EXP BLOCK .

    $default  reduce using rule 7 (WHILE)


State 65

    8 DO_WHILE: R_DO BLOCK R_WHILE . EXP

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 90


State 66

    2 BLOCK: START_SCOPE BLOCK_INIT . CMDS BLOCK_END END_SCOPE

    R_IF        shift, and go to state 1
    R_WHILE     shift, and go to state 2
    R_DO        shift, and go to state 3
    R_FOR       shift, and go to state 4
    R_SWITCH    shift, and go to state 5
    R_BREAK     shift, and go to state 6
    R_CONTINUE  shift, and go to state 7
    R_IN        shift, and go to state 8
    R_OUT       shift, and go to state 9
    VAR         shift, and go to state 10
    CONST       shift, and go to state 11
    END_LINE    shift, and go to state 12

    $default  reduce using rule 6 (CMDS)

    CMDS              go to state 91
    WHILE             go to state 15
    DO_WHILE          go to state 16
    IF                go to state 17
    FOR               go to state 18
    SWITCH            go to state 19
    BREAK             go to state 20
    CONTINUE          go to state 21
    ASSIGNMENT_STATE  go to state 22
    CMD               go to state 23
    IS                go to state 24
    IN                go to state 25
    OUT               go to state 26
    varConst          go to state 27


State 67

   14 FOR: R_FOR '(' ASSIGNMENT_STATE . SEMI_COLON EXP SEMI_COLON ASSIGNMENT_STATE ')' BLOCK

    SEMI_COLON  shift, and go to state 92


State 68

   23 ASSIGNMENT_STATE: varConst . ASSIGNMENT EXP

    ASSIGNMENT  shift, and go to state 52


State 69

   15 SWITCH: R_SWITCH EXP BLOCK_INIT . END_LINE CASES BLOCK_END

    END_LINE  shift, and go to state 93


State 70

   46 IN: R_IN COLON varConst .

    $default  reduce using rule 46 (IN)


State 71

   47 OUT: R_OUT COLON EXP . COMMA_OUT
   50 EXP: EXP . R_DOT EXP
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   54    | EXP . QUESTION EXP COLON EXP
   55    | EXP . EQUALITY_TEST EXP
   56    | EXP . ORDER_RELATION EXP
   57    | EXP . ARITHMETIC_1 EXP
   58    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 55
    ARITHMETIC_1    shift, and go to state 56
    ARITHMETIC_2    shift, and go to state 57
    BOOLEAN_LOGIC   shift, and go to state 58
    EQUALITY_TEST   shift, and go to state 59
    ORDER_RELATION  shift, and go to state 60
    COLON           shift, and go to state 61
    QUESTION        shift, and go to state 62
    COMMA           shift, and go to state 94

    $default  reduce using rule 49 (COMMA_OUT)

    COMMA_OUT  go to state 95


State 72

   41 TYPE: INTEGER .

    $default  reduce using rule 41 (TYPE)


State 73

   42 TYPE: FLOAT .

    $default  reduce using rule 42 (TYPE)


State 74

   43 TYPE: BOOLEAN .

    $default  reduce using rule 43 (TYPE)


State 75

   44 TYPE: CHARACTER .

    $default  reduce using rule 44 (TYPE)


State 76

   45 TYPE: STRING .

    $default  reduce using rule 45 (TYPE)


State 77

   40 IS: varConst R_IS TYPE .

    $default  reduce using rule 40 (IS)


State 78

   23 ASSIGNMENT_STATE: varConst ASSIGNMENT EXP .
   50 EXP: EXP . R_DOT EXP
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   54    | EXP . QUESTION EXP COLON EXP
   55    | EXP . EQUALITY_TEST EXP
   56    | EXP . ORDER_RELATION EXP
   57    | EXP . ARITHMETIC_1 EXP
   58    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 55
    ARITHMETIC_1    shift, and go to state 56
    ARITHMETIC_2    shift, and go to state 57
    BOOLEAN_LOGIC   shift, and go to state 58
    EQUALITY_TEST   shift, and go to state 59
    ORDER_RELATION  shift, and go to state 60
    COLON           shift, and go to state 61
    QUESTION        shift, and go to state 62

    $default  reduce using rule 23 (ASSIGNMENT_STATE)


State 79

   59 EXP: '(' EXP ')' .

    $default  reduce using rule 59 (EXP)


State 80

   50 EXP: EXP . R_DOT EXP
   50    | EXP R_DOT EXP .
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   54    | EXP . QUESTION EXP COLON EXP
   55    | EXP . EQUALITY_TEST EXP
   56    | EXP . ORDER_RELATION EXP
   57    | EXP . ARITHMETIC_1 EXP
   58    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 56
    ARITHMETIC_2  shift, and go to state 57

    $default  reduce using rule 50 (EXP)


State 81

   50 EXP: EXP . R_DOT EXP
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   54    | EXP . QUESTION EXP COLON EXP
   55    | EXP . EQUALITY_TEST EXP
   56    | EXP . ORDER_RELATION EXP
   57    | EXP . ARITHMETIC_1 EXP
   57    | EXP ARITHMETIC_1 EXP .
   58    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_2  shift, and go to state 57

    $default  reduce using rule 57 (EXP)


State 82

   50 EXP: EXP . R_DOT EXP
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   54    | EXP . QUESTION EXP COLON EXP
   55    | EXP . EQUALITY_TEST EXP
   56    | EXP . ORDER_RELATION EXP
   57    | EXP . ARITHMETIC_1 EXP
   58    | EXP . ARITHMETIC_2 EXP
   58    | EXP ARITHMETIC_2 EXP .

    $default  reduce using rule 58 (EXP)


State 83

   50 EXP: EXP . R_DOT EXP
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   52    | EXP BOOLEAN_LOGIC EXP .
   54    | EXP . QUESTION EXP COLON EXP
   55    | EXP . EQUALITY_TEST EXP
   56    | EXP . ORDER_RELATION EXP
   57    | EXP . ARITHMETIC_1 EXP
   58    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 55
    ARITHMETIC_1    shift, and go to state 56
    ARITHMETIC_2    shift, and go to state 57
    EQUALITY_TEST   shift, and go to state 59
    ORDER_RELATION  shift, and go to state 60
    COLON           shift, and go to state 61
    QUESTION        shift, and go to state 62

    $default  reduce using rule 52 (EXP)


State 84

   50 EXP: EXP . R_DOT EXP
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   54    | EXP . QUESTION EXP COLON EXP
   55    | EXP . EQUALITY_TEST EXP
   55    | EXP EQUALITY_TEST EXP .
   56    | EXP . ORDER_RELATION EXP
   57    | EXP . ARITHMETIC_1 EXP
   58    | EXP . ARITHMETIC_2 EXP

    R_DOT         shift, and go to state 55
    ARITHMETIC_1  shift, and go to state 56
    ARITHMETIC_2  shift, and go to state 57
    COLON         shift, and go to state 61
    QUESTION      shift, and go to state 62

    $default  reduce using rule 55 (EXP)


State 85

   50 EXP: EXP . R_DOT EXP
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   54    | EXP . QUESTION EXP COLON EXP
   55    | EXP . EQUALITY_TEST EXP
   56    | EXP . ORDER_RELATION EXP
   56    | EXP ORDER_RELATION EXP .
   57    | EXP . ARITHMETIC_1 EXP
   58    | EXP . ARITHMETIC_2 EXP

    R_DOT         shift, and go to state 55
    ARITHMETIC_1  shift, and go to state 56
    ARITHMETIC_2  shift, and go to state 57
    COLON         shift, and go to state 61
    QUESTION      shift, and go to state 62

    $default  reduce using rule 56 (EXP)


State 86

   51 EXP: EXP COLON COLON . EXPLICIT_TYPE

    EXPLICIT_TYPE  shift, and go to state 96


State 87

   50 EXP: EXP . R_DOT EXP
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   54    | EXP . QUESTION EXP COLON EXP
   54    | EXP QUESTION EXP . COLON EXP
   55    | EXP . EQUALITY_TEST EXP
   56    | EXP . ORDER_RELATION EXP
   57    | EXP . ARITHMETIC_1 EXP
   58    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 55
    ARITHMETIC_1    shift, and go to state 56
    ARITHMETIC_2    shift, and go to state 57
    BOOLEAN_LOGIC   shift, and go to state 58
    EQUALITY_TEST   shift, and go to state 59
    ORDER_RELATION  shift, and go to state 60
    COLON           shift, and go to state 97
    QUESTION        shift, and go to state 62


State 88

   10 ELSE: R_ELSE . ELSEIF

    R_IF  shift, and go to state 1

    $default  reduce using rule 3 (START_SCOPE)

    BLOCK        go to state 98
    START_SCOPE  go to state 40
    IF           go to state 99
    ELSEIF       go to state 100


State 89

    9 IF: R_IF EXP BLOCK ELSE .

    $default  reduce using rule 9 (IF)


State 90

    8 DO_WHILE: R_DO BLOCK R_WHILE EXP .
   50 EXP: EXP . R_DOT EXP
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   54    | EXP . QUESTION EXP COLON EXP
   55    | EXP . EQUALITY_TEST EXP
   56    | EXP . ORDER_RELATION EXP
   57    | EXP . ARITHMETIC_1 EXP
   58    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 55
    ARITHMETIC_1    shift, and go to state 56
    ARITHMETIC_2    shift, and go to state 57
    BOOLEAN_LOGIC   shift, and go to state 58
    EQUALITY_TEST   shift, and go to state 59
    ORDER_RELATION  shift, and go to state 60
    COLON           shift, and go to state 61
    QUESTION        shift, and go to state 62

    $default  reduce using rule 8 (DO_WHILE)


State 91

    2 BLOCK: START_SCOPE BLOCK_INIT CMDS . BLOCK_END END_SCOPE

    BLOCK_END  shift, and go to state 101


State 92

   14 FOR: R_FOR '(' ASSIGNMENT_STATE SEMI_COLON . EXP SEMI_COLON ASSIGNMENT_STATE ')' BLOCK

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 102


State 93

   15 SWITCH: R_SWITCH EXP BLOCK_INIT END_LINE . CASES BLOCK_END

    R_CASE  shift, and go to state 103

    R_CASE    [reduce using rule 19 (CASE)]
    $default  reduce using rule 19 (CASE)

    CASES  go to state 104
    CASE   go to state 105


State 94

   48 COMMA_OUT: COMMA . EXP COMMA_OUT

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 106


State 95

   47 OUT: R_OUT COLON EXP COMMA_OUT .

    $default  reduce using rule 47 (OUT)


State 96

   51 EXP: EXP COLON COLON EXPLICIT_TYPE .

    $default  reduce using rule 51 (EXP)


State 97

   51 EXP: EXP COLON . COLON EXPLICIT_TYPE
   54    | EXP QUESTION EXP COLON . EXP

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    COLON      shift, and go to state 86
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 107


State 98

   13 ELSEIF: BLOCK .

    $default  reduce using rule 13 (ELSEIF)


State 99

   12 ELSEIF: IF .

    $default  reduce using rule 12 (ELSEIF)


State 100

   10 ELSE: R_ELSE ELSEIF .

    $default  reduce using rule 10 (ELSE)


State 101

    2 BLOCK: START_SCOPE BLOCK_INIT CMDS BLOCK_END . END_SCOPE

    $default  reduce using rule 4 (END_SCOPE)

    END_SCOPE  go to state 108


State 102

   14 FOR: R_FOR '(' ASSIGNMENT_STATE SEMI_COLON EXP . SEMI_COLON ASSIGNMENT_STATE ')' BLOCK
   50 EXP: EXP . R_DOT EXP
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   54    | EXP . QUESTION EXP COLON EXP
   55    | EXP . EQUALITY_TEST EXP
   56    | EXP . ORDER_RELATION EXP
   57    | EXP . ARITHMETIC_1 EXP
   58    | EXP . ARITHMETIC_2 EXP

    SEMI_COLON      shift, and go to state 109
    R_DOT           shift, and go to state 55
    ARITHMETIC_1    shift, and go to state 56
    ARITHMETIC_2    shift, and go to state 57
    BOOLEAN_LOGIC   shift, and go to state 58
    EQUALITY_TEST   shift, and go to state 59
    ORDER_RELATION  shift, and go to state 60
    COLON           shift, and go to state 61
    QUESTION        shift, and go to state 62


State 103

   18 CASE: R_CASE . EXP COLON CMDS

    INTEGER    shift, and go to state 28
    FLOAT      shift, and go to state 29
    BOOLEAN    shift, and go to state 30
    CHARACTER  shift, and go to state 31
    STRING     shift, and go to state 32
    NOT        shift, and go to state 33
    VAR        shift, and go to state 34
    CONST      shift, and go to state 35
    '('        shift, and go to state 36

    EXP  go to state 110


State 104

   15 SWITCH: R_SWITCH EXP BLOCK_INIT END_LINE CASES . BLOCK_END

    BLOCK_END  shift, and go to state 111


State 105

   16 CASES: CASE . DEFAULT
   17      | CASE . CASES

    R_CASE     shift, and go to state 103
    R_DEFAULT  shift, and go to state 112

    R_CASE     [reduce using rule 19 (CASE)]
    R_DEFAULT  [reduce using rule 19 (CASE)]

    CASES    go to state 113
    CASE     go to state 105
    DEFAULT  go to state 114


State 106

   48 COMMA_OUT: COMMA EXP . COMMA_OUT
   50 EXP: EXP . R_DOT EXP
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   54    | EXP . QUESTION EXP COLON EXP
   55    | EXP . EQUALITY_TEST EXP
   56    | EXP . ORDER_RELATION EXP
   57    | EXP . ARITHMETIC_1 EXP
   58    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 55
    ARITHMETIC_1    shift, and go to state 56
    ARITHMETIC_2    shift, and go to state 57
    BOOLEAN_LOGIC   shift, and go to state 58
    EQUALITY_TEST   shift, and go to state 59
    ORDER_RELATION  shift, and go to state 60
    COLON           shift, and go to state 61
    QUESTION        shift, and go to state 62
    COMMA           shift, and go to state 94

    $default  reduce using rule 49 (COMMA_OUT)

    COMMA_OUT  go to state 115


State 107

   50 EXP: EXP . R_DOT EXP
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   54    | EXP . QUESTION EXP COLON EXP
   54    | EXP QUESTION EXP COLON EXP .
   55    | EXP . EQUALITY_TEST EXP
   56    | EXP . ORDER_RELATION EXP
   57    | EXP . ARITHMETIC_1 EXP
   58    | EXP . ARITHMETIC_2 EXP

    R_DOT         shift, and go to state 55
    ARITHMETIC_1  shift, and go to state 56
    ARITHMETIC_2  shift, and go to state 57

    $default  reduce using rule 54 (EXP)


State 108

    2 BLOCK: START_SCOPE BLOCK_INIT CMDS BLOCK_END END_SCOPE .

    $default  reduce using rule 2 (BLOCK)


State 109

   14 FOR: R_FOR '(' ASSIGNMENT_STATE SEMI_COLON EXP SEMI_COLON . ASSIGNMENT_STATE ')' BLOCK

    VAR    shift, and go to state 10
    CONST  shift, and go to state 11

    ASSIGNMENT_STATE  go to state 116
    varConst          go to state 68


State 110

   18 CASE: R_CASE EXP . COLON CMDS
   50 EXP: EXP . R_DOT EXP
   51    | EXP . COLON COLON EXPLICIT_TYPE
   52    | EXP . BOOLEAN_LOGIC EXP
   54    | EXP . QUESTION EXP COLON EXP
   55    | EXP . EQUALITY_TEST EXP
   56    | EXP . ORDER_RELATION EXP
   57    | EXP . ARITHMETIC_1 EXP
   58    | EXP . ARITHMETIC_2 EXP

    R_DOT           shift, and go to state 55
    ARITHMETIC_1    shift, and go to state 56
    ARITHMETIC_2    shift, and go to state 57
    BOOLEAN_LOGIC   shift, and go to state 58
    EQUALITY_TEST   shift, and go to state 59
    ORDER_RELATION  shift, and go to state 60
    COLON           shift, and go to state 117
    QUESTION        shift, and go to state 62


State 111

   15 SWITCH: R_SWITCH EXP BLOCK_INIT END_LINE CASES BLOCK_END .

    $default  reduce using rule 15 (SWITCH)


State 112

   20 DEFAULT: R_DEFAULT . COLON CMDS

    COLON  shift, and go to state 118


State 113

   17 CASES: CASE CASES .

    $default  reduce using rule 17 (CASES)


State 114

   16 CASES: CASE DEFAULT .

    $default  reduce using rule 16 (CASES)


State 115

   48 COMMA_OUT: COMMA EXP COMMA_OUT .

    $default  reduce using rule 48 (COMMA_OUT)


State 116

   14 FOR: R_FOR '(' ASSIGNMENT_STATE SEMI_COLON EXP SEMI_COLON ASSIGNMENT_STATE . ')' BLOCK

    ')'  shift, and go to state 119


State 117

   18 CASE: R_CASE EXP COLON . CMDS
   51 EXP: EXP COLON . COLON EXPLICIT_TYPE

    R_IF        shift, and go to state 1
    R_WHILE     shift, and go to state 2
    R_DO        shift, and go to state 3
    R_FOR       shift, and go to state 4
    R_SWITCH    shift, and go to state 5
    R_BREAK     shift, and go to state 6
    R_CONTINUE  shift, and go to state 7
    R_IN        shift, and go to state 8
    R_OUT       shift, and go to state 9
    COLON       shift, and go to state 86
    VAR         shift, and go to state 10
    CONST       shift, and go to state 11
    END_LINE    shift, and go to state 12

    $default  reduce using rule 6 (CMDS)

    CMDS              go to state 120
    WHILE             go to state 15
    DO_WHILE          go to state 16
    IF                go to state 17
    FOR               go to state 18
    SWITCH            go to state 19
    BREAK             go to state 20
    CONTINUE          go to state 21
    ASSIGNMENT_STATE  go to state 22
    CMD               go to state 23
    IS                go to state 24
    IN                go to state 25
    OUT               go to state 26
    varConst          go to state 27


State 118

   20 DEFAULT: R_DEFAULT COLON . CMDS

    R_IF        shift, and go to state 1
    R_WHILE     shift, and go to state 2
    R_DO        shift, and go to state 3
    R_FOR       shift, and go to state 4
    R_SWITCH    shift, and go to state 5
    R_BREAK     shift, and go to state 6
    R_CONTINUE  shift, and go to state 7
    R_IN        shift, and go to state 8
    R_OUT       shift, and go to state 9
    VAR         shift, and go to state 10
    CONST       shift, and go to state 11
    END_LINE    shift, and go to state 12

    $default  reduce using rule 6 (CMDS)

    CMDS              go to state 121
    WHILE             go to state 15
    DO_WHILE          go to state 16
    IF                go to state 17
    FOR               go to state 18
    SWITCH            go to state 19
    BREAK             go to state 20
    CONTINUE          go to state 21
    ASSIGNMENT_STATE  go to state 22
    CMD               go to state 23
    IS                go to state 24
    IN                go to state 25
    OUT               go to state 26
    varConst          go to state 27


State 119

   14 FOR: R_FOR '(' ASSIGNMENT_STATE SEMI_COLON EXP SEMI_COLON ASSIGNMENT_STATE ')' . BLOCK

    $default  reduce using rule 3 (START_SCOPE)

    BLOCK        go to state 122
    START_SCOPE  go to state 40


State 120

   18 CASE: R_CASE EXP COLON CMDS .

    $default  reduce using rule 18 (CASE)


State 121

   20 DEFAULT: R_DEFAULT COLON CMDS .

    $default  reduce using rule 20 (DEFAULT)


State 122

   14 FOR: R_FOR '(' ASSIGNMENT_STATE SEMI_COLON EXP SEMI_COLON ASSIGNMENT_STATE ')' BLOCK .

    $default  reduce using rule 14 (FOR)
