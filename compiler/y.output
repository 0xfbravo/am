Grammar

    0 $accept: BEFORE_THE_BEGINNING $end

    1 BEFORE_THE_BEGINNING: CMDS

    2 BLOCK: BLOCK_INIT CMDS BLOCK_END

    3 CMDS: CMD CMDS
    4     | %empty

    5 CMD: BLOCK
    6    | END_LINE
    7    | EXP
    8    | EXP SEMI_COLON

    9 EXP: EXP COLON COLON EXPLICIT_TYPE
   10    | EXP BOOLEAN_LOGIC EXP
   11    | NOT EXP
   12    | EXP QUESTION EXP COLON EXP
   13    | EXP EQUALITY_TEST EXP
   14    | EXP ORDER_RELATION EXP
   15    | varConst ASSIGNMENT EXP
   16    | EXP ARITHMETIC_1 EXP
   17    | EXP ARITHMETIC_2 EXP
   18    | '(' EXP ')'
   19    | VAR
   20    | CONST
   21    | INTEGER
   22    | FLOAT
   23    | BOOLEAN
   24    | CHARACTER

   25 varConst: VAR
   26         | CONST


Terminals, with rules where they appear

$end (0) 0
'(' (40) 18
')' (41) 18
error (256)
BLOCK_INIT (258) 2
BLOCK_END (259) 2
SEMI_COLON (260) 8
INTEGER (261) 21
FLOAT (262) 22
BOOLEAN (263) 23
CHARACTER (264) 24
ARITHMETIC_1 (265) 16
ARITHMETIC_2 (266) 17
BOOLEAN_LOGIC (267) 10
EQUALITY_TEST (268) 13
ORDER_RELATION (269) 14
ASSIGNMENT (270) 15
NOT (271) 11
COLON (272) 9 12
QUESTION (273) 12
VAR (274) 19 25
CONST (275) 20 26
EXPLICIT_TYPE (276) 9
END_LINE (277) 6


Nonterminals, with rules where they appear

$accept (25)
    on left: 0
BEFORE_THE_BEGINNING (26)
    on left: 1, on right: 0
BLOCK (27)
    on left: 2, on right: 5
CMDS (28)
    on left: 3 4, on right: 1 2 3
CMD (29)
    on left: 5 6 7 8, on right: 3
EXP (30)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24, on right:
    7 8 9 10 11 12 13 14 15 16 17 18
varConst (31)
    on left: 25 26, on right: 15


State 0

    0 $accept: . BEFORE_THE_BEGINNING $end

    BLOCK_INIT  shift, and go to state 1
    INTEGER     shift, and go to state 2
    FLOAT       shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    CHARACTER   shift, and go to state 5
    NOT         shift, and go to state 6
    VAR         shift, and go to state 7
    CONST       shift, and go to state 8
    END_LINE    shift, and go to state 9
    '('         shift, and go to state 10

    $default  reduce using rule 4 (CMDS)

    BEFORE_THE_BEGINNING  go to state 11
    BLOCK                 go to state 12
    CMDS                  go to state 13
    CMD                   go to state 14
    EXP                   go to state 15
    varConst              go to state 16


State 1

    2 BLOCK: BLOCK_INIT . CMDS BLOCK_END

    BLOCK_INIT  shift, and go to state 1
    INTEGER     shift, and go to state 2
    FLOAT       shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    CHARACTER   shift, and go to state 5
    NOT         shift, and go to state 6
    VAR         shift, and go to state 7
    CONST       shift, and go to state 8
    END_LINE    shift, and go to state 9
    '('         shift, and go to state 10

    $default  reduce using rule 4 (CMDS)

    BLOCK     go to state 12
    CMDS      go to state 17
    CMD       go to state 14
    EXP       go to state 15
    varConst  go to state 16


State 2

   21 EXP: INTEGER .

    $default  reduce using rule 21 (EXP)


State 3

   22 EXP: FLOAT .

    $default  reduce using rule 22 (EXP)


State 4

   23 EXP: BOOLEAN .

    $default  reduce using rule 23 (EXP)


State 5

   24 EXP: CHARACTER .

    $default  reduce using rule 24 (EXP)


State 6

   11 EXP: NOT . EXP

    INTEGER    shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOLEAN    shift, and go to state 4
    CHARACTER  shift, and go to state 5
    NOT        shift, and go to state 6
    VAR        shift, and go to state 7
    CONST      shift, and go to state 8
    '('        shift, and go to state 10

    EXP       go to state 18
    varConst  go to state 16


State 7

   19 EXP: VAR .
   25 varConst: VAR .

    ASSIGNMENT  reduce using rule 25 (varConst)
    $default    reduce using rule 19 (EXP)


State 8

   20 EXP: CONST .
   26 varConst: CONST .

    ASSIGNMENT  reduce using rule 26 (varConst)
    $default    reduce using rule 20 (EXP)


State 9

    6 CMD: END_LINE .

    $default  reduce using rule 6 (CMD)


State 10

   18 EXP: '(' . EXP ')'

    INTEGER    shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOLEAN    shift, and go to state 4
    CHARACTER  shift, and go to state 5
    NOT        shift, and go to state 6
    VAR        shift, and go to state 7
    CONST      shift, and go to state 8
    '('        shift, and go to state 10

    EXP       go to state 19
    varConst  go to state 16


State 11

    0 $accept: BEFORE_THE_BEGINNING . $end

    $end  shift, and go to state 20


State 12

    5 CMD: BLOCK .

    $default  reduce using rule 5 (CMD)


State 13

    1 BEFORE_THE_BEGINNING: CMDS .

    $default  reduce using rule 1 (BEFORE_THE_BEGINNING)


State 14

    3 CMDS: CMD . CMDS

    BLOCK_INIT  shift, and go to state 1
    INTEGER     shift, and go to state 2
    FLOAT       shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    CHARACTER   shift, and go to state 5
    NOT         shift, and go to state 6
    VAR         shift, and go to state 7
    CONST       shift, and go to state 8
    END_LINE    shift, and go to state 9
    '('         shift, and go to state 10

    $default  reduce using rule 4 (CMDS)

    BLOCK     go to state 12
    CMDS      go to state 21
    CMD       go to state 14
    EXP       go to state 15
    varConst  go to state 16


State 15

    7 CMD: EXP .
    8    | EXP . SEMI_COLON
    9 EXP: EXP . COLON COLON EXPLICIT_TYPE
   10    | EXP . BOOLEAN_LOGIC EXP
   12    | EXP . QUESTION EXP COLON EXP
   13    | EXP . EQUALITY_TEST EXP
   14    | EXP . ORDER_RELATION EXP
   16    | EXP . ARITHMETIC_1 EXP
   17    | EXP . ARITHMETIC_2 EXP

    SEMI_COLON      shift, and go to state 22
    ARITHMETIC_1    shift, and go to state 23
    ARITHMETIC_2    shift, and go to state 24
    BOOLEAN_LOGIC   shift, and go to state 25
    EQUALITY_TEST   shift, and go to state 26
    ORDER_RELATION  shift, and go to state 27
    COLON           shift, and go to state 28
    QUESTION        shift, and go to state 29

    $default  reduce using rule 7 (CMD)


State 16

   15 EXP: varConst . ASSIGNMENT EXP

    ASSIGNMENT  shift, and go to state 30


State 17

    2 BLOCK: BLOCK_INIT CMDS . BLOCK_END

    BLOCK_END  shift, and go to state 31


State 18

    9 EXP: EXP . COLON COLON EXPLICIT_TYPE
   10    | EXP . BOOLEAN_LOGIC EXP
   11    | NOT EXP .
   12    | EXP . QUESTION EXP COLON EXP
   13    | EXP . EQUALITY_TEST EXP
   14    | EXP . ORDER_RELATION EXP
   16    | EXP . ARITHMETIC_1 EXP
   17    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 23
    ARITHMETIC_2  shift, and go to state 24

    $default  reduce using rule 11 (EXP)


State 19

    9 EXP: EXP . COLON COLON EXPLICIT_TYPE
   10    | EXP . BOOLEAN_LOGIC EXP
   12    | EXP . QUESTION EXP COLON EXP
   13    | EXP . EQUALITY_TEST EXP
   14    | EXP . ORDER_RELATION EXP
   16    | EXP . ARITHMETIC_1 EXP
   17    | EXP . ARITHMETIC_2 EXP
   18    | '(' EXP . ')'

    ARITHMETIC_1    shift, and go to state 23
    ARITHMETIC_2    shift, and go to state 24
    BOOLEAN_LOGIC   shift, and go to state 25
    EQUALITY_TEST   shift, and go to state 26
    ORDER_RELATION  shift, and go to state 27
    COLON           shift, and go to state 28
    QUESTION        shift, and go to state 29
    ')'             shift, and go to state 32


State 20

    0 $accept: BEFORE_THE_BEGINNING $end .

    $default  accept


State 21

    3 CMDS: CMD CMDS .

    $default  reduce using rule 3 (CMDS)


State 22

    8 CMD: EXP SEMI_COLON .

    $default  reduce using rule 8 (CMD)


State 23

   16 EXP: EXP ARITHMETIC_1 . EXP

    INTEGER    shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOLEAN    shift, and go to state 4
    CHARACTER  shift, and go to state 5
    NOT        shift, and go to state 6
    VAR        shift, and go to state 7
    CONST      shift, and go to state 8
    '('        shift, and go to state 10

    EXP       go to state 33
    varConst  go to state 16


State 24

   17 EXP: EXP ARITHMETIC_2 . EXP

    INTEGER    shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOLEAN    shift, and go to state 4
    CHARACTER  shift, and go to state 5
    NOT        shift, and go to state 6
    VAR        shift, and go to state 7
    CONST      shift, and go to state 8
    '('        shift, and go to state 10

    EXP       go to state 34
    varConst  go to state 16


State 25

   10 EXP: EXP BOOLEAN_LOGIC . EXP

    INTEGER    shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOLEAN    shift, and go to state 4
    CHARACTER  shift, and go to state 5
    NOT        shift, and go to state 6
    VAR        shift, and go to state 7
    CONST      shift, and go to state 8
    '('        shift, and go to state 10

    EXP       go to state 35
    varConst  go to state 16


State 26

   13 EXP: EXP EQUALITY_TEST . EXP

    INTEGER    shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOLEAN    shift, and go to state 4
    CHARACTER  shift, and go to state 5
    NOT        shift, and go to state 6
    VAR        shift, and go to state 7
    CONST      shift, and go to state 8
    '('        shift, and go to state 10

    EXP       go to state 36
    varConst  go to state 16


State 27

   14 EXP: EXP ORDER_RELATION . EXP

    INTEGER    shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOLEAN    shift, and go to state 4
    CHARACTER  shift, and go to state 5
    NOT        shift, and go to state 6
    VAR        shift, and go to state 7
    CONST      shift, and go to state 8
    '('        shift, and go to state 10

    EXP       go to state 37
    varConst  go to state 16


State 28

    9 EXP: EXP COLON . COLON EXPLICIT_TYPE

    COLON  shift, and go to state 38


State 29

   12 EXP: EXP QUESTION . EXP COLON EXP

    INTEGER    shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOLEAN    shift, and go to state 4
    CHARACTER  shift, and go to state 5
    NOT        shift, and go to state 6
    VAR        shift, and go to state 7
    CONST      shift, and go to state 8
    '('        shift, and go to state 10

    EXP       go to state 39
    varConst  go to state 16


State 30

   15 EXP: varConst ASSIGNMENT . EXP

    INTEGER    shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOLEAN    shift, and go to state 4
    CHARACTER  shift, and go to state 5
    NOT        shift, and go to state 6
    VAR        shift, and go to state 7
    CONST      shift, and go to state 8
    '('        shift, and go to state 10

    EXP       go to state 40
    varConst  go to state 16


State 31

    2 BLOCK: BLOCK_INIT CMDS BLOCK_END .

    $default  reduce using rule 2 (BLOCK)


State 32

   18 EXP: '(' EXP ')' .

    $default  reduce using rule 18 (EXP)


State 33

    9 EXP: EXP . COLON COLON EXPLICIT_TYPE
   10    | EXP . BOOLEAN_LOGIC EXP
   12    | EXP . QUESTION EXP COLON EXP
   13    | EXP . EQUALITY_TEST EXP
   14    | EXP . ORDER_RELATION EXP
   16    | EXP . ARITHMETIC_1 EXP
   16    | EXP ARITHMETIC_1 EXP .
   17    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_2  shift, and go to state 24

    $default  reduce using rule 16 (EXP)


State 34

    9 EXP: EXP . COLON COLON EXPLICIT_TYPE
   10    | EXP . BOOLEAN_LOGIC EXP
   12    | EXP . QUESTION EXP COLON EXP
   13    | EXP . EQUALITY_TEST EXP
   14    | EXP . ORDER_RELATION EXP
   16    | EXP . ARITHMETIC_1 EXP
   17    | EXP . ARITHMETIC_2 EXP
   17    | EXP ARITHMETIC_2 EXP .

    $default  reduce using rule 17 (EXP)


State 35

    9 EXP: EXP . COLON COLON EXPLICIT_TYPE
   10    | EXP . BOOLEAN_LOGIC EXP
   10    | EXP BOOLEAN_LOGIC EXP .
   12    | EXP . QUESTION EXP COLON EXP
   13    | EXP . EQUALITY_TEST EXP
   14    | EXP . ORDER_RELATION EXP
   16    | EXP . ARITHMETIC_1 EXP
   17    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 23
    ARITHMETIC_2    shift, and go to state 24
    EQUALITY_TEST   shift, and go to state 26
    ORDER_RELATION  shift, and go to state 27
    COLON           shift, and go to state 28
    QUESTION        shift, and go to state 29

    $default  reduce using rule 10 (EXP)


State 36

    9 EXP: EXP . COLON COLON EXPLICIT_TYPE
   10    | EXP . BOOLEAN_LOGIC EXP
   12    | EXP . QUESTION EXP COLON EXP
   13    | EXP . EQUALITY_TEST EXP
   13    | EXP EQUALITY_TEST EXP .
   14    | EXP . ORDER_RELATION EXP
   16    | EXP . ARITHMETIC_1 EXP
   17    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 23
    ARITHMETIC_2  shift, and go to state 24
    COLON         shift, and go to state 28
    QUESTION      shift, and go to state 29

    $default  reduce using rule 13 (EXP)


State 37

    9 EXP: EXP . COLON COLON EXPLICIT_TYPE
   10    | EXP . BOOLEAN_LOGIC EXP
   12    | EXP . QUESTION EXP COLON EXP
   13    | EXP . EQUALITY_TEST EXP
   14    | EXP . ORDER_RELATION EXP
   14    | EXP ORDER_RELATION EXP .
   16    | EXP . ARITHMETIC_1 EXP
   17    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 23
    ARITHMETIC_2  shift, and go to state 24
    COLON         shift, and go to state 28
    QUESTION      shift, and go to state 29

    $default  reduce using rule 14 (EXP)


State 38

    9 EXP: EXP COLON COLON . EXPLICIT_TYPE

    EXPLICIT_TYPE  shift, and go to state 41


State 39

    9 EXP: EXP . COLON COLON EXPLICIT_TYPE
   10    | EXP . BOOLEAN_LOGIC EXP
   12    | EXP . QUESTION EXP COLON EXP
   12    | EXP QUESTION EXP . COLON EXP
   13    | EXP . EQUALITY_TEST EXP
   14    | EXP . ORDER_RELATION EXP
   16    | EXP . ARITHMETIC_1 EXP
   17    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 23
    ARITHMETIC_2    shift, and go to state 24
    BOOLEAN_LOGIC   shift, and go to state 25
    EQUALITY_TEST   shift, and go to state 26
    ORDER_RELATION  shift, and go to state 27
    COLON           shift, and go to state 42
    QUESTION        shift, and go to state 29


State 40

    9 EXP: EXP . COLON COLON EXPLICIT_TYPE
   10    | EXP . BOOLEAN_LOGIC EXP
   12    | EXP . QUESTION EXP COLON EXP
   13    | EXP . EQUALITY_TEST EXP
   14    | EXP . ORDER_RELATION EXP
   15    | varConst ASSIGNMENT EXP .
   16    | EXP . ARITHMETIC_1 EXP
   17    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1    shift, and go to state 23
    ARITHMETIC_2    shift, and go to state 24
    BOOLEAN_LOGIC   shift, and go to state 25
    EQUALITY_TEST   shift, and go to state 26
    ORDER_RELATION  shift, and go to state 27
    COLON           shift, and go to state 28
    QUESTION        shift, and go to state 29

    $default  reduce using rule 15 (EXP)


State 41

    9 EXP: EXP COLON COLON EXPLICIT_TYPE .

    $default  reduce using rule 9 (EXP)


State 42

    9 EXP: EXP COLON . COLON EXPLICIT_TYPE
   12    | EXP QUESTION EXP COLON . EXP

    INTEGER    shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOLEAN    shift, and go to state 4
    CHARACTER  shift, and go to state 5
    NOT        shift, and go to state 6
    COLON      shift, and go to state 38
    VAR        shift, and go to state 7
    CONST      shift, and go to state 8
    '('        shift, and go to state 10

    EXP       go to state 43
    varConst  go to state 16


State 43

    9 EXP: EXP . COLON COLON EXPLICIT_TYPE
   10    | EXP . BOOLEAN_LOGIC EXP
   12    | EXP . QUESTION EXP COLON EXP
   12    | EXP QUESTION EXP COLON EXP .
   13    | EXP . EQUALITY_TEST EXP
   14    | EXP . ORDER_RELATION EXP
   16    | EXP . ARITHMETIC_1 EXP
   17    | EXP . ARITHMETIC_2 EXP

    ARITHMETIC_1  shift, and go to state 23
    ARITHMETIC_2  shift, and go to state 24

    $default  reduce using rule 12 (EXP)
